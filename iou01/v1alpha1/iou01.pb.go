// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iou01.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ============= ENUMS ==========================
type AnalogChannel int32

const (
	AnalogChannel_AnalogChannel0 AnalogChannel = 0
	AnalogChannel_AnalogChannel1 AnalogChannel = 1
	AnalogChannel_AnalogChannel2 AnalogChannel = 2
	AnalogChannel_AnalogChannel3 AnalogChannel = 3
)

var AnalogChannel_name = map[int32]string{
	0: "AnalogChannel0",
	1: "AnalogChannel1",
	2: "AnalogChannel2",
	3: "AnalogChannel3",
}

var AnalogChannel_value = map[string]int32{
	"AnalogChannel0": 0,
	"AnalogChannel1": 1,
	"AnalogChannel2": 2,
	"AnalogChannel3": 3,
}

func (x AnalogChannel) String() string {
	return proto.EnumName(AnalogChannel_name, int32(x))
}

func (AnalogChannel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{0}
}

type BinaryOutput int32

const (
	BinaryOutput_BinaryOutput0 BinaryOutput = 0
	BinaryOutput_BinaryOutput1 BinaryOutput = 1
	BinaryOutput_BinaryOutput2 BinaryOutput = 2
	BinaryOutput_BinaryOutput3 BinaryOutput = 3
)

var BinaryOutput_name = map[int32]string{
	0: "BinaryOutput0",
	1: "BinaryOutput1",
	2: "BinaryOutput2",
	3: "BinaryOutput3",
}

var BinaryOutput_value = map[string]int32{
	"BinaryOutput0": 0,
	"BinaryOutput1": 1,
	"BinaryOutput2": 2,
	"BinaryOutput3": 3,
}

func (x BinaryOutput) String() string {
	return proto.EnumName(BinaryOutput_name, int32(x))
}

func (BinaryOutput) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{1}
}

type BinaryInput int32

const (
	BinaryInput_BinaryInput0 BinaryInput = 0
	BinaryInput_BinaryInput1 BinaryInput = 1
	BinaryInput_BinaryInput2 BinaryInput = 2
	BinaryInput_BinaryInput3 BinaryInput = 3
)

var BinaryInput_name = map[int32]string{
	0: "BinaryInput0",
	1: "BinaryInput1",
	2: "BinaryInput2",
	3: "BinaryInput3",
}

var BinaryInput_value = map[string]int32{
	"BinaryInput0": 0,
	"BinaryInput1": 1,
	"BinaryInput2": 2,
	"BinaryInput3": 3,
}

func (x BinaryInput) String() string {
	return proto.EnumName(BinaryInput_name, int32(x))
}

func (BinaryInput) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{2}
}

// ============= Configuration =================
// Sets the configuration for the sample rate of one specific analog channel
type HardwareConfigurationAnalogSampleRate struct {
	// Number of the analog channel to configure
	Channel AnalogChannel `protobuf:"varint,1,opt,name=channel,proto3,enum=iou01.AnalogChannel" json:"channel,omitempty"`
	// Sample rate in Hz
	SampleRate           uint32   `protobuf:"fixed32,2,opt,name=sampleRate,proto3" json:"sampleRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HardwareConfigurationAnalogSampleRate) Reset()         { *m = HardwareConfigurationAnalogSampleRate{} }
func (m *HardwareConfigurationAnalogSampleRate) String() string { return proto.CompactTextString(m) }
func (*HardwareConfigurationAnalogSampleRate) ProtoMessage()    {}
func (*HardwareConfigurationAnalogSampleRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{0}
}

func (m *HardwareConfigurationAnalogSampleRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HardwareConfigurationAnalogSampleRate.Unmarshal(m, b)
}
func (m *HardwareConfigurationAnalogSampleRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HardwareConfigurationAnalogSampleRate.Marshal(b, m, deterministic)
}
func (m *HardwareConfigurationAnalogSampleRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HardwareConfigurationAnalogSampleRate.Merge(m, src)
}
func (m *HardwareConfigurationAnalogSampleRate) XXX_Size() int {
	return xxx_messageInfo_HardwareConfigurationAnalogSampleRate.Size(m)
}
func (m *HardwareConfigurationAnalogSampleRate) XXX_DiscardUnknown() {
	xxx_messageInfo_HardwareConfigurationAnalogSampleRate.DiscardUnknown(m)
}

var xxx_messageInfo_HardwareConfigurationAnalogSampleRate proto.InternalMessageInfo

func (m *HardwareConfigurationAnalogSampleRate) GetChannel() AnalogChannel {
	if m != nil {
		return m.Channel
	}
	return AnalogChannel_AnalogChannel0
}

func (m *HardwareConfigurationAnalogSampleRate) GetSampleRate() uint32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

// HardwareConfiguration to pass to Functionblock.ConfigurationControl.functionSpecificHardwareConfiguration hook
type HardwareConfiguration struct {
	// The measurement frequency (sampling rate) of the analog inputs
	AnalogSampleRate []*HardwareConfigurationAnalogSampleRate `protobuf:"bytes,1,rep,name=analogSampleRate,proto3" json:"analogSampleRate,omitempty"`
	// Map to enable fritting on binary output channels. This activates a cyclically higher current at the channel outputs to prevent corrison over time
	// LSB is Output0, 1: fritting enabled, 0: fritting disabled
	BinaryOutputFrittingMap uint32   `protobuf:"fixed32,2,opt,name=binaryOutputFrittingMap,proto3" json:"binaryOutputFrittingMap,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *HardwareConfiguration) Reset()         { *m = HardwareConfiguration{} }
func (m *HardwareConfiguration) String() string { return proto.CompactTextString(m) }
func (*HardwareConfiguration) ProtoMessage()    {}
func (*HardwareConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{1}
}

func (m *HardwareConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HardwareConfiguration.Unmarshal(m, b)
}
func (m *HardwareConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HardwareConfiguration.Marshal(b, m, deterministic)
}
func (m *HardwareConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HardwareConfiguration.Merge(m, src)
}
func (m *HardwareConfiguration) XXX_Size() int {
	return xxx_messageInfo_HardwareConfiguration.Size(m)
}
func (m *HardwareConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_HardwareConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_HardwareConfiguration proto.InternalMessageInfo

func (m *HardwareConfiguration) GetAnalogSampleRate() []*HardwareConfigurationAnalogSampleRate {
	if m != nil {
		return m.AnalogSampleRate
	}
	return nil
}

func (m *HardwareConfiguration) GetBinaryOutputFrittingMap() uint32 {
	if m != nil {
		return m.BinaryOutputFrittingMap
	}
	return 0
}

// HardwareConfigurationResponse to pass to Functionblock.HardwareConfigurationResponse.functionSpecificHardwareConfigurationResponse hook
// Returns the current hardware configuration
type HardwareConfigurationResponse struct {
	// The measurement frequency (sampling rate) of the analog inputs
	AnalogSampleRate []*HardwareConfigurationAnalogSampleRate `protobuf:"bytes,1,rep,name=analogSampleRate,proto3" json:"analogSampleRate,omitempty"`
	// Map to enable fritting on output channels. This activates a cyclically higher current at the channel outputs to prevent corrison over time
	Fritting             uint32   `protobuf:"fixed32,2,opt,name=fritting,proto3" json:"fritting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HardwareConfigurationResponse) Reset()         { *m = HardwareConfigurationResponse{} }
func (m *HardwareConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*HardwareConfigurationResponse) ProtoMessage()    {}
func (*HardwareConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{2}
}

func (m *HardwareConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HardwareConfigurationResponse.Unmarshal(m, b)
}
func (m *HardwareConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HardwareConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *HardwareConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HardwareConfigurationResponse.Merge(m, src)
}
func (m *HardwareConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_HardwareConfigurationResponse.Size(m)
}
func (m *HardwareConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HardwareConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HardwareConfigurationResponse proto.InternalMessageInfo

func (m *HardwareConfigurationResponse) GetAnalogSampleRate() []*HardwareConfigurationAnalogSampleRate {
	if m != nil {
		return m.AnalogSampleRate
	}
	return nil
}

func (m *HardwareConfigurationResponse) GetFritting() uint32 {
	if m != nil {
		return m.Fritting
	}
	return 0
}

// ============= FunctionControl =================
// Sets the value of a single binary channel
type SetSingle struct {
	// Number of the binary output channel
	Channel BinaryOutput `protobuf:"varint,1,opt,name=channel,proto3,enum=iou01.BinaryOutput" json:"channel,omitempty"`
	// State of the binary output channel
	State                bool     `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetSingle) Reset()         { *m = SetSingle{} }
func (m *SetSingle) String() string { return proto.CompactTextString(m) }
func (*SetSingle) ProtoMessage()    {}
func (*SetSingle) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{3}
}

func (m *SetSingle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSingle.Unmarshal(m, b)
}
func (m *SetSingle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSingle.Marshal(b, m, deterministic)
}
func (m *SetSingle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSingle.Merge(m, src)
}
func (m *SetSingle) XXX_Size() int {
	return xxx_messageInfo_SetSingle.Size(m)
}
func (m *SetSingle) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSingle.DiscardUnknown(m)
}

var xxx_messageInfo_SetSingle proto.InternalMessageInfo

func (m *SetSingle) GetChannel() BinaryOutput {
	if m != nil {
		return m.Channel
	}
	return BinaryOutput_BinaryOutput0
}

func (m *SetSingle) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

// Sets all binary channels
type SetAll struct {
	// binary coded map of input values. 0 means low, 1 means high, LSB is Output0
	Values               uint32   `protobuf:"fixed32,1,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAll) Reset()         { *m = SetAll{} }
func (m *SetAll) String() string { return proto.CompactTextString(m) }
func (*SetAll) ProtoMessage()    {}
func (*SetAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{4}
}

func (m *SetAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAll.Unmarshal(m, b)
}
func (m *SetAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAll.Marshal(b, m, deterministic)
}
func (m *SetAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAll.Merge(m, src)
}
func (m *SetAll) XXX_Size() int {
	return xxx_messageInfo_SetAll.Size(m)
}
func (m *SetAll) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAll.DiscardUnknown(m)
}

var xxx_messageInfo_SetAll proto.InternalMessageInfo

func (m *SetAll) GetValues() uint32 {
	if m != nil {
		return m.Values
	}
	return 0
}

// Gets the current value of a single binary channel
type GetSingle struct {
	// Specifies the binary input channel
	Channel              BinaryInput `protobuf:"varint,1,opt,name=channel,proto3,enum=iou01.BinaryInput" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetSingle) Reset()         { *m = GetSingle{} }
func (m *GetSingle) String() string { return proto.CompactTextString(m) }
func (*GetSingle) ProtoMessage()    {}
func (*GetSingle) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{5}
}

func (m *GetSingle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSingle.Unmarshal(m, b)
}
func (m *GetSingle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSingle.Marshal(b, m, deterministic)
}
func (m *GetSingle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSingle.Merge(m, src)
}
func (m *GetSingle) XXX_Size() int {
	return xxx_messageInfo_GetSingle.Size(m)
}
func (m *GetSingle) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSingle.DiscardUnknown(m)
}

var xxx_messageInfo_GetSingle proto.InternalMessageInfo

func (m *GetSingle) GetChannel() BinaryInput {
	if m != nil {
		return m.Channel
	}
	return BinaryInput_BinaryInput0
}

// Gets the values of all binary channels
type GetAll struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAll) Reset()         { *m = GetAll{} }
func (m *GetAll) String() string { return proto.CompactTextString(m) }
func (*GetAll) ProtoMessage()    {}
func (*GetAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{6}
}

func (m *GetAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAll.Unmarshal(m, b)
}
func (m *GetAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAll.Marshal(b, m, deterministic)
}
func (m *GetAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAll.Merge(m, src)
}
func (m *GetAll) XXX_Size() int {
	return xxx_messageInfo_GetAll.Size(m)
}
func (m *GetAll) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAll.DiscardUnknown(m)
}

var xxx_messageInfo_GetAll proto.InternalMessageInfo

// FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
type FunctionControlGet struct {
	// Types that are valid to be assigned to Type:
	//	*FunctionControlGet_Single
	//	*FunctionControlGet_All
	Type                 isFunctionControlGet_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *FunctionControlGet) Reset()         { *m = FunctionControlGet{} }
func (m *FunctionControlGet) String() string { return proto.CompactTextString(m) }
func (*FunctionControlGet) ProtoMessage()    {}
func (*FunctionControlGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{7}
}

func (m *FunctionControlGet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionControlGet.Unmarshal(m, b)
}
func (m *FunctionControlGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionControlGet.Marshal(b, m, deterministic)
}
func (m *FunctionControlGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionControlGet.Merge(m, src)
}
func (m *FunctionControlGet) XXX_Size() int {
	return xxx_messageInfo_FunctionControlGet.Size(m)
}
func (m *FunctionControlGet) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionControlGet.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionControlGet proto.InternalMessageInfo

type isFunctionControlGet_Type interface {
	isFunctionControlGet_Type()
}

type FunctionControlGet_Single struct {
	Single *GetSingle `protobuf:"bytes,1,opt,name=single,proto3,oneof"`
}

type FunctionControlGet_All struct {
	All *GetAll `protobuf:"bytes,2,opt,name=all,proto3,oneof"`
}

func (*FunctionControlGet_Single) isFunctionControlGet_Type() {}

func (*FunctionControlGet_All) isFunctionControlGet_Type() {}

func (m *FunctionControlGet) GetType() isFunctionControlGet_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FunctionControlGet) GetSingle() *GetSingle {
	if x, ok := m.GetType().(*FunctionControlGet_Single); ok {
		return x.Single
	}
	return nil
}

func (m *FunctionControlGet) GetAll() *GetAll {
	if x, ok := m.GetType().(*FunctionControlGet_All); ok {
		return x.All
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FunctionControlGet) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FunctionControlGet_Single)(nil),
		(*FunctionControlGet_All)(nil),
	}
}

// FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
type FunctionControlSet struct {
	// Types that are valid to be assigned to Type:
	//	*FunctionControlSet_Single
	//	*FunctionControlSet_All
	Type                 isFunctionControlSet_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *FunctionControlSet) Reset()         { *m = FunctionControlSet{} }
func (m *FunctionControlSet) String() string { return proto.CompactTextString(m) }
func (*FunctionControlSet) ProtoMessage()    {}
func (*FunctionControlSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{8}
}

func (m *FunctionControlSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionControlSet.Unmarshal(m, b)
}
func (m *FunctionControlSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionControlSet.Marshal(b, m, deterministic)
}
func (m *FunctionControlSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionControlSet.Merge(m, src)
}
func (m *FunctionControlSet) XXX_Size() int {
	return xxx_messageInfo_FunctionControlSet.Size(m)
}
func (m *FunctionControlSet) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionControlSet.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionControlSet proto.InternalMessageInfo

type isFunctionControlSet_Type interface {
	isFunctionControlSet_Type()
}

type FunctionControlSet_Single struct {
	Single *SetSingle `protobuf:"bytes,1,opt,name=single,proto3,oneof"`
}

type FunctionControlSet_All struct {
	All *SetAll `protobuf:"bytes,2,opt,name=all,proto3,oneof"`
}

func (*FunctionControlSet_Single) isFunctionControlSet_Type() {}

func (*FunctionControlSet_All) isFunctionControlSet_Type() {}

func (m *FunctionControlSet) GetType() isFunctionControlSet_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FunctionControlSet) GetSingle() *SetSingle {
	if x, ok := m.GetType().(*FunctionControlSet_Single); ok {
		return x.Single
	}
	return nil
}

func (m *FunctionControlSet) GetAll() *SetAll {
	if x, ok := m.GetType().(*FunctionControlSet_All); ok {
		return x.All
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FunctionControlSet) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FunctionControlSet_Single)(nil),
		(*FunctionControlSet_All)(nil),
	}
}

type SetAllResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAllResponse) Reset()         { *m = SetAllResponse{} }
func (m *SetAllResponse) String() string { return proto.CompactTextString(m) }
func (*SetAllResponse) ProtoMessage()    {}
func (*SetAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{9}
}

func (m *SetAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAllResponse.Unmarshal(m, b)
}
func (m *SetAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAllResponse.Marshal(b, m, deterministic)
}
func (m *SetAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAllResponse.Merge(m, src)
}
func (m *SetAllResponse) XXX_Size() int {
	return xxx_messageInfo_SetAllResponse.Size(m)
}
func (m *SetAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetAllResponse proto.InternalMessageInfo

type SetSingleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetSingleResponse) Reset()         { *m = SetSingleResponse{} }
func (m *SetSingleResponse) String() string { return proto.CompactTextString(m) }
func (*SetSingleResponse) ProtoMessage()    {}
func (*SetSingleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{10}
}

func (m *SetSingleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSingleResponse.Unmarshal(m, b)
}
func (m *SetSingleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSingleResponse.Marshal(b, m, deterministic)
}
func (m *SetSingleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSingleResponse.Merge(m, src)
}
func (m *SetSingleResponse) XXX_Size() int {
	return xxx_messageInfo_SetSingleResponse.Size(m)
}
func (m *SetSingleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSingleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetSingleResponse proto.InternalMessageInfo

type GetAllResponse struct {
	// binary coded map of input values. 0 means low, 1 means high, LSB is Input0
	Inputs               uint32   `protobuf:"fixed32,2,opt,name=inputs,proto3" json:"inputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllResponse) Reset()         { *m = GetAllResponse{} }
func (m *GetAllResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllResponse) ProtoMessage()    {}
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{11}
}

func (m *GetAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllResponse.Unmarshal(m, b)
}
func (m *GetAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllResponse.Marshal(b, m, deterministic)
}
func (m *GetAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllResponse.Merge(m, src)
}
func (m *GetAllResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllResponse.Size(m)
}
func (m *GetAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllResponse proto.InternalMessageInfo

func (m *GetAllResponse) GetInputs() uint32 {
	if m != nil {
		return m.Inputs
	}
	return 0
}

type GetSingleResponse struct {
	// Number of the binary input channel
	Channel BinaryInput `protobuf:"varint,1,opt,name=channel,proto3,enum=iou01.BinaryInput" json:"channel,omitempty"`
	// State for the bianry input channel
	State                bool     `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSingleResponse) Reset()         { *m = GetSingleResponse{} }
func (m *GetSingleResponse) String() string { return proto.CompactTextString(m) }
func (*GetSingleResponse) ProtoMessage()    {}
func (*GetSingleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{12}
}

func (m *GetSingleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSingleResponse.Unmarshal(m, b)
}
func (m *GetSingleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSingleResponse.Marshal(b, m, deterministic)
}
func (m *GetSingleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSingleResponse.Merge(m, src)
}
func (m *GetSingleResponse) XXX_Size() int {
	return xxx_messageInfo_GetSingleResponse.Size(m)
}
func (m *GetSingleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSingleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSingleResponse proto.InternalMessageInfo

func (m *GetSingleResponse) GetChannel() BinaryInput {
	if m != nil {
		return m.Channel
	}
	return BinaryInput_BinaryInput0
}

func (m *GetSingleResponse) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

// FunctionControlResponse to pass to Functionblock.FunctionControlResponse.functionSpecificFunctionControlResponse hook
type FunctionControlResponse struct {
	// Types that are valid to be assigned to Type:
	//	*FunctionControlResponse_GetSingle
	//	*FunctionControlResponse_GetAll
	//	*FunctionControlResponse_SetSingle
	//	*FunctionControlResponse_SetAll
	Type                 isFunctionControlResponse_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *FunctionControlResponse) Reset()         { *m = FunctionControlResponse{} }
func (m *FunctionControlResponse) String() string { return proto.CompactTextString(m) }
func (*FunctionControlResponse) ProtoMessage()    {}
func (*FunctionControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{13}
}

func (m *FunctionControlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionControlResponse.Unmarshal(m, b)
}
func (m *FunctionControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionControlResponse.Marshal(b, m, deterministic)
}
func (m *FunctionControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionControlResponse.Merge(m, src)
}
func (m *FunctionControlResponse) XXX_Size() int {
	return xxx_messageInfo_FunctionControlResponse.Size(m)
}
func (m *FunctionControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionControlResponse proto.InternalMessageInfo

type isFunctionControlResponse_Type interface {
	isFunctionControlResponse_Type()
}

type FunctionControlResponse_GetSingle struct {
	GetSingle *GetSingleResponse `protobuf:"bytes,1,opt,name=getSingle,proto3,oneof"`
}

type FunctionControlResponse_GetAll struct {
	GetAll *GetAllResponse `protobuf:"bytes,2,opt,name=getAll,proto3,oneof"`
}

type FunctionControlResponse_SetSingle struct {
	SetSingle *SetSingleResponse `protobuf:"bytes,3,opt,name=setSingle,proto3,oneof"`
}

type FunctionControlResponse_SetAll struct {
	SetAll *SetAllResponse `protobuf:"bytes,4,opt,name=setAll,proto3,oneof"`
}

func (*FunctionControlResponse_GetSingle) isFunctionControlResponse_Type() {}

func (*FunctionControlResponse_GetAll) isFunctionControlResponse_Type() {}

func (*FunctionControlResponse_SetSingle) isFunctionControlResponse_Type() {}

func (*FunctionControlResponse_SetAll) isFunctionControlResponse_Type() {}

func (m *FunctionControlResponse) GetType() isFunctionControlResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FunctionControlResponse) GetGetSingle() *GetSingleResponse {
	if x, ok := m.GetType().(*FunctionControlResponse_GetSingle); ok {
		return x.GetSingle
	}
	return nil
}

func (m *FunctionControlResponse) GetGetAll() *GetAllResponse {
	if x, ok := m.GetType().(*FunctionControlResponse_GetAll); ok {
		return x.GetAll
	}
	return nil
}

func (m *FunctionControlResponse) GetSetSingle() *SetSingleResponse {
	if x, ok := m.GetType().(*FunctionControlResponse_SetSingle); ok {
		return x.SetSingle
	}
	return nil
}

func (m *FunctionControlResponse) GetSetAll() *SetAllResponse {
	if x, ok := m.GetType().(*FunctionControlResponse_SetAll); ok {
		return x.SetAll
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FunctionControlResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FunctionControlResponse_GetSingle)(nil),
		(*FunctionControlResponse_GetAll)(nil),
		(*FunctionControlResponse_SetSingle)(nil),
		(*FunctionControlResponse_SetAll)(nil),
	}
}

// ============= StreamControl ==================
// StreamControlStart to pass to Functionblock.StreamControl.functionSpecificStreamControlStart hook
type StreamControlStart struct {
	// Starts the stream for configured analog input channels.
	// LSB is AnalogInput0, 1: stream enabled for channel, 0: stream disabled for channel
	AnalogInputsEnableMap uint32   `protobuf:"fixed32,1,opt,name=analogInputsEnableMap,proto3" json:"analogInputsEnableMap,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *StreamControlStart) Reset()         { *m = StreamControlStart{} }
func (m *StreamControlStart) String() string { return proto.CompactTextString(m) }
func (*StreamControlStart) ProtoMessage()    {}
func (*StreamControlStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{14}
}

func (m *StreamControlStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamControlStart.Unmarshal(m, b)
}
func (m *StreamControlStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamControlStart.Marshal(b, m, deterministic)
}
func (m *StreamControlStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamControlStart.Merge(m, src)
}
func (m *StreamControlStart) XXX_Size() int {
	return xxx_messageInfo_StreamControlStart.Size(m)
}
func (m *StreamControlStart) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamControlStart.DiscardUnknown(m)
}

var xxx_messageInfo_StreamControlStart proto.InternalMessageInfo

func (m *StreamControlStart) GetAnalogInputsEnableMap() uint32 {
	if m != nil {
		return m.AnalogInputsEnableMap
	}
	return 0
}

type AnalogSample struct {
	// Timestamp for that specific channels sample
	Timestamp uint64 `protobuf:"fixed64,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Specifies the analog channel
	Channel AnalogChannel `protobuf:"varint,2,opt,name=channel,proto3,enum=iou01.AnalogChannel" json:"channel,omitempty"`
	// Value ranges between: -32,768 (-10V) to 32,767 (+10V)
	Value int32 `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
	// Indicates if the value is valid or invalid (out of range).
	// true: value is valud, false: value is invalid
	Valid                bool     `protobuf:"varint,4,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnalogSample) Reset()         { *m = AnalogSample{} }
func (m *AnalogSample) String() string { return proto.CompactTextString(m) }
func (*AnalogSample) ProtoMessage()    {}
func (*AnalogSample) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{15}
}

func (m *AnalogSample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalogSample.Unmarshal(m, b)
}
func (m *AnalogSample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalogSample.Marshal(b, m, deterministic)
}
func (m *AnalogSample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalogSample.Merge(m, src)
}
func (m *AnalogSample) XXX_Size() int {
	return xxx_messageInfo_AnalogSample.Size(m)
}
func (m *AnalogSample) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalogSample.DiscardUnknown(m)
}

var xxx_messageInfo_AnalogSample proto.InternalMessageInfo

func (m *AnalogSample) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AnalogSample) GetChannel() AnalogChannel {
	if m != nil {
		return m.Channel
	}
	return AnalogChannel_AnalogChannel0
}

func (m *AnalogSample) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *AnalogSample) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

// StreamResponse to pass to Functionblock.StreamResponse.functionSpecificStreamResponse hook
type StreamResponse struct {
	Samples              []*AnalogSample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5737084fafafd55, []int{16}
}

func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

func (m *StreamResponse) GetSamples() []*AnalogSample {
	if m != nil {
		return m.Samples
	}
	return nil
}

func init() {
	proto.RegisterEnum("iou01.AnalogChannel", AnalogChannel_name, AnalogChannel_value)
	proto.RegisterEnum("iou01.BinaryOutput", BinaryOutput_name, BinaryOutput_value)
	proto.RegisterEnum("iou01.BinaryInput", BinaryInput_name, BinaryInput_value)
	proto.RegisterType((*HardwareConfigurationAnalogSampleRate)(nil), "iou01.HardwareConfigurationAnalogSampleRate")
	proto.RegisterType((*HardwareConfiguration)(nil), "iou01.HardwareConfiguration")
	proto.RegisterType((*HardwareConfigurationResponse)(nil), "iou01.HardwareConfigurationResponse")
	proto.RegisterType((*SetSingle)(nil), "iou01.SetSingle")
	proto.RegisterType((*SetAll)(nil), "iou01.SetAll")
	proto.RegisterType((*GetSingle)(nil), "iou01.GetSingle")
	proto.RegisterType((*GetAll)(nil), "iou01.GetAll")
	proto.RegisterType((*FunctionControlGet)(nil), "iou01.FunctionControlGet")
	proto.RegisterType((*FunctionControlSet)(nil), "iou01.FunctionControlSet")
	proto.RegisterType((*SetAllResponse)(nil), "iou01.SetAllResponse")
	proto.RegisterType((*SetSingleResponse)(nil), "iou01.SetSingleResponse")
	proto.RegisterType((*GetAllResponse)(nil), "iou01.GetAllResponse")
	proto.RegisterType((*GetSingleResponse)(nil), "iou01.GetSingleResponse")
	proto.RegisterType((*FunctionControlResponse)(nil), "iou01.FunctionControlResponse")
	proto.RegisterType((*StreamControlStart)(nil), "iou01.StreamControlStart")
	proto.RegisterType((*AnalogSample)(nil), "iou01.AnalogSample")
	proto.RegisterType((*StreamResponse)(nil), "iou01.StreamResponse")
}

func init() { proto.RegisterFile("iou01.proto", fileDescriptor_c5737084fafafd55) }

var fileDescriptor_c5737084fafafd55 = []byte{
	// 674 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0x9b, 0x75, 0x4b, 0xdb, 0xd3, 0xad, 0x64, 0xde, 0xc6, 0x2a, 0x04, 0xa8, 0x44, 0x42,
	0xaa, 0xa6, 0x7d, 0xb5, 0xe3, 0x62, 0x5c, 0xa1, 0x6d, 0x62, 0x2d, 0x48, 0x08, 0xe4, 0x08, 0x81,
	0x76, 0x83, 0xbc, 0xcd, 0xeb, 0x22, 0x5c, 0x27, 0x8a, 0xdd, 0x4d, 0x7b, 0x03, 0x5e, 0x80, 0xa7,
	0xe0, 0x01, 0xb9, 0x45, 0xfe, 0x48, 0x9a, 0xa4, 0x1d, 0x1a, 0x17, 0x5c, 0x9e, 0xbf, 0x8f, 0xff,
	0x3f, 0xfb, 0x1c, 0xe7, 0x04, 0x9a, 0x61, 0x34, 0xd9, 0xef, 0xed, 0xc6, 0x49, 0x24, 0x23, 0xb4,
	0xa4, 0x03, 0xff, 0x16, 0x5e, 0x0e, 0x49, 0x72, 0x79, 0x4b, 0x12, 0x7a, 0x12, 0xf1, 0xab, 0x70,
	0x34, 0x49, 0x88, 0x0c, 0x23, 0x7e, 0xc4, 0x09, 0x8b, 0x46, 0x01, 0x19, 0xc7, 0x8c, 0x62, 0x22,
	0x29, 0xda, 0x85, 0xda, 0xc5, 0x35, 0xe1, 0x9c, 0xb2, 0xb6, 0xd3, 0x71, 0xba, 0xad, 0xfe, 0xfa,
	0xae, 0xb1, 0x33, 0x99, 0x27, 0x66, 0x0d, 0xa7, 0x49, 0xe8, 0x39, 0x80, 0xc8, 0x76, 0xb7, 0x17,
	0x3a, 0x4e, 0xb7, 0x86, 0x73, 0x8a, 0xff, 0xcb, 0x81, 0x8d, 0xb9, 0x64, 0xf4, 0x15, 0x3c, 0x52,
	0xa2, 0xb7, 0x9d, 0x4e, 0xb5, 0xdb, 0xec, 0x6f, 0x5b, 0xe4, 0x83, 0x4e, 0x8c, 0x67, 0x5c, 0xd0,
	0x21, 0x6c, 0x9e, 0x87, 0x9c, 0x24, 0x77, 0x1f, 0x27, 0x32, 0x9e, 0xc8, 0xd3, 0x24, 0x94, 0x32,
	0xe4, 0xa3, 0x0f, 0x24, 0xb6, 0x07, 0xbc, 0x6f, 0xd9, 0xff, 0xe9, 0xc0, 0xb3, 0xb9, 0x54, 0x4c,
	0x45, 0x1c, 0x71, 0x41, 0xff, 0xe3, 0xa9, 0x9f, 0x40, 0xfd, 0xca, 0x1e, 0xc5, 0x1e, 0x33, 0x8b,
	0xfd, 0x4f, 0xd0, 0x08, 0xa8, 0x0c, 0x42, 0x3e, 0x62, 0x14, 0xed, 0x94, 0x5b, 0xb4, 0x66, 0xc9,
	0xc7, 0xb9, 0x5b, 0x4d, 0x3b, 0xb4, 0x0e, 0x4b, 0x42, 0xa6, 0xcd, 0xa9, 0x63, 0x13, 0xf8, 0x1d,
	0x70, 0x03, 0x2a, 0x8f, 0x18, 0x43, 0x8f, 0xc1, 0xbd, 0x21, 0x6c, 0x42, 0x85, 0x76, 0xab, 0x61,
	0x1b, 0xf9, 0xaf, 0xa1, 0x31, 0xc8, 0x98, 0xdb, 0x65, 0x26, 0x2a, 0x30, 0xdf, 0xf1, 0x3c, 0xd2,
	0xaf, 0x83, 0x3b, 0xd0, 0xe6, 0xfe, 0x77, 0x40, 0xa7, 0x13, 0x7e, 0xa1, 0x4a, 0x70, 0x12, 0x71,
	0x99, 0x44, 0x6c, 0x40, 0x25, 0xda, 0x02, 0x57, 0x68, 0x5f, 0x6d, 0xd6, 0xec, 0x7b, 0xd6, 0x2c,
	0xe3, 0x0d, 0x2b, 0xd8, 0x66, 0xa0, 0x17, 0x50, 0x25, 0x8c, 0xe9, 0xc3, 0x37, 0xfb, 0x2b, 0xd3,
	0xc4, 0x23, 0xc6, 0x86, 0x15, 0xac, 0xd6, 0x8e, 0x5d, 0x58, 0x94, 0x77, 0x31, 0x9d, 0x03, 0x0b,
	0xfe, 0x02, 0x0b, 0x1e, 0x0a, 0x0b, 0xe6, 0xc2, 0x3c, 0x68, 0x99, 0x85, 0xf4, 0x69, 0xf8, 0x6b,
	0xb0, 0x9a, 0x79, 0x66, 0x62, 0x17, 0x5a, 0x83, 0x42, 0x9a, 0xaa, 0x77, 0xa8, 0xca, 0x25, 0x6c,
	0x97, 0x6d, 0xe4, 0x7f, 0x81, 0xd5, 0x41, 0x79, 0xfb, 0xbf, 0xd5, 0xfd, 0x9e, 0x56, 0xff, 0x76,
	0x60, 0xb3, 0x54, 0x97, 0xcc, 0xff, 0x10, 0x1a, 0xa3, 0x14, 0x6a, 0xeb, 0xd3, 0x2e, 0x37, 0x23,
	0x4d, 0x1e, 0x56, 0xf0, 0x34, 0x19, 0xed, 0x81, 0x3b, 0xd2, 0x17, 0xb3, 0xd5, 0xda, 0x28, 0xb4,
	0x26, 0xb7, 0xc7, 0xa6, 0x29, 0x94, 0xc8, 0x50, 0xd5, 0x02, 0x2a, 0x98, 0x87, 0x12, 0x79, 0x94,
	0x30, 0xa8, 0xc5, 0x02, 0x2a, 0x98, 0x41, 0x99, 0xb4, 0xac, 0x47, 0xef, 0x01, 0x05, 0x32, 0xa1,
	0x64, 0x9c, 0x3e, 0x07, 0x49, 0x12, 0x89, 0x5e, 0xc1, 0x86, 0xf9, 0xf8, 0x74, 0xf5, 0xc4, 0x5b,
	0x4e, 0xce, 0x19, 0x55, 0xc3, 0xc1, 0xbc, 0xff, 0xf9, 0x8b, 0xfe, 0x0f, 0x07, 0x96, 0xf3, 0x5f,
	0x31, 0x7a, 0x0a, 0x0d, 0x19, 0x8e, 0xa9, 0x90, 0x64, 0x6c, 0xb6, 0xba, 0x78, 0x2a, 0xe4, 0xe7,
	0xe8, 0xc2, 0x43, 0xe6, 0xe8, 0x3a, 0x2c, 0xe9, 0xef, 0x4e, 0x57, 0xe6, 0x11, 0x36, 0x81, 0x55,
	0xc3, 0x4b, 0x7d, 0xf1, 0x3a, 0x36, 0x81, 0xff, 0x06, 0x5a, 0xe6, 0x5a, 0x59, 0x1b, 0x77, 0xa0,
	0x66, 0x66, 0xae, 0xb0, 0xc3, 0x68, 0xad, 0x40, 0xb3, 0x53, 0x26, 0xcd, 0xd9, 0xfa, 0x06, 0x2b,
	0x85, 0x63, 0x20, 0x04, 0xad, 0x82, 0xb0, 0xef, 0x55, 0x66, 0xb4, 0x9e, 0xe7, 0xcc, 0x68, 0x7d,
	0x6f, 0x61, 0x46, 0x3b, 0xf0, 0xaa, 0x5b, 0x67, 0xb0, 0x9c, 0x1f, 0x46, 0x68, 0x15, 0x56, 0xf2,
	0xb1, 0xb2, 0x2f, 0x49, 0xca, 0xbd, 0x24, 0x29, 0xf3, 0x92, 0xa4, 0xbc, 0x3f, 0x43, 0x33, 0xf7,
	0xf8, 0x91, 0x97, 0xa2, 0x74, 0xa8, 0x9c, 0x8b, 0x8a, 0x32, 0x2e, 0x2a, 0xca, 0xb7, 0xa8, 0x1c,
	0x78, 0xd5, 0x63, 0xef, 0xac, 0xa5, 0x4b, 0xb6, 0x77, 0xd3, 0x23, 0x2c, 0xbe, 0x26, 0xbd, 0x73,
	0x57, 0xff, 0x41, 0x0f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x12, 0x07, 0x3a, 0x2f, 0x50, 0x07,
	0x00, 0x00,
}
