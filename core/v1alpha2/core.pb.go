// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core.proto

package v1alpha2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandId int32

const (
	CommandId_IDENTIFY_HARDWARE               CommandId = 0
	CommandId_IDENTIFY_FIRMWARE               CommandId = 1
	CommandId_LOAD_FIRMWARE_CHUNK             CommandId = 2
	CommandId_PROGRAM_HARDWARE_IDENTIFICATION CommandId = 3
	CommandId_RESTART                         CommandId = 4
	CommandId_SET_PERSISTENT_PARAMETER        CommandId = 5
	CommandId_GET_PERSISTENT_PARAMETER        CommandId = 6
)

var CommandId_name = map[int32]string{
	0: "IDENTIFY_HARDWARE",
	1: "IDENTIFY_FIRMWARE",
	2: "LOAD_FIRMWARE_CHUNK",
	3: "PROGRAM_HARDWARE_IDENTIFICATION",
	4: "RESTART",
	5: "SET_PERSISTENT_PARAMETER",
	6: "GET_PERSISTENT_PARAMETER",
}

var CommandId_value = map[string]int32{
	"IDENTIFY_HARDWARE":               0,
	"IDENTIFY_FIRMWARE":               1,
	"LOAD_FIRMWARE_CHUNK":             2,
	"PROGRAM_HARDWARE_IDENTIFICATION": 3,
	"RESTART":                         4,
	"SET_PERSISTENT_PARAMETER":        5,
	"GET_PERSISTENT_PARAMETER":        6,
}

func (x CommandId) String() string {
	return proto.EnumName(CommandId_name, int32(x))
}

func (CommandId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

type Status int32

const (
	Status_OK                          Status = 0
	Status_UNKNOWN_COMMAND             Status = 1
	Status_ILLEGAL_PARAMETER           Status = 2
	Status_BAD_CHUNK_SEQ               Status = 3
	Status_BAD_CHUNK_SIZE              Status = 4
	Status_NOT_COMPATIBLE              Status = 5
	Status_INTERNAL_ERROR              Status = 6
	Status_PROGRAMMING_ERROR           Status = 7
	Status_NO_HW_INVENTORY             Status = 8
	Status_THIS_VERSION_FAILED_ALREADY Status = 9
)

var Status_name = map[int32]string{
	0: "OK",
	1: "UNKNOWN_COMMAND",
	2: "ILLEGAL_PARAMETER",
	3: "BAD_CHUNK_SEQ",
	4: "BAD_CHUNK_SIZE",
	5: "NOT_COMPATIBLE",
	6: "INTERNAL_ERROR",
	7: "PROGRAMMING_ERROR",
	8: "NO_HW_INVENTORY",
	9: "THIS_VERSION_FAILED_ALREADY",
}

var Status_value = map[string]int32{
	"OK":                          0,
	"UNKNOWN_COMMAND":             1,
	"ILLEGAL_PARAMETER":           2,
	"BAD_CHUNK_SEQ":               3,
	"BAD_CHUNK_SIZE":              4,
	"NOT_COMPATIBLE":              5,
	"INTERNAL_ERROR":              6,
	"PROGRAMMING_ERROR":           7,
	"NO_HW_INVENTORY":             8,
	"THIS_VERSION_FAILED_ALREADY": 9,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{1}
}

// LoadFirmware
// Client sends sequence of CmdLoadFirmwareChunk commands, with increasing
// chunk numbers. Clients defines chunk size.
// Server must acknowledge each chunk with Response.
// Last chunk has is_last_chunk set to True, so server knows that programming
// has finished
type LoadFirmwareChunkCommand struct {
	ChunkNumber          uint32   `protobuf:"varint,1,opt,name=chunk_number,json=chunkNumber,proto3" json:"chunk_number,omitempty"`
	IsLastChunk          bool     `protobuf:"varint,2,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadFirmwareChunkCommand) Reset()         { *m = LoadFirmwareChunkCommand{} }
func (m *LoadFirmwareChunkCommand) String() string { return proto.CompactTextString(m) }
func (*LoadFirmwareChunkCommand) ProtoMessage()    {}
func (*LoadFirmwareChunkCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

func (m *LoadFirmwareChunkCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadFirmwareChunkCommand.Unmarshal(m, b)
}
func (m *LoadFirmwareChunkCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadFirmwareChunkCommand.Marshal(b, m, deterministic)
}
func (m *LoadFirmwareChunkCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadFirmwareChunkCommand.Merge(m, src)
}
func (m *LoadFirmwareChunkCommand) XXX_Size() int {
	return xxx_messageInfo_LoadFirmwareChunkCommand.Size(m)
}
func (m *LoadFirmwareChunkCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadFirmwareChunkCommand.DiscardUnknown(m)
}

var xxx_messageInfo_LoadFirmwareChunkCommand proto.InternalMessageInfo

func (m *LoadFirmwareChunkCommand) GetChunkNumber() uint32 {
	if m != nil {
		return m.ChunkNumber
	}
	return 0
}

func (m *LoadFirmwareChunkCommand) GetIsLastChunk() bool {
	if m != nil {
		return m.IsLastChunk
	}
	return false
}

func (m *LoadFirmwareChunkCommand) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ProgramHardwareIdentificationCommand struct {
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	RootArticle          string   `protobuf:"bytes,2,opt,name=root_article,json=rootArticle,proto3" json:"root_article,omitempty"`
	MajorVersion         uint32   `protobuf:"varint,3,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	SerialNumber         string   `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgramHardwareIdentificationCommand) Reset()         { *m = ProgramHardwareIdentificationCommand{} }
func (m *ProgramHardwareIdentificationCommand) String() string { return proto.CompactTextString(m) }
func (*ProgramHardwareIdentificationCommand) ProtoMessage()    {}
func (*ProgramHardwareIdentificationCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{1}
}

func (m *ProgramHardwareIdentificationCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgramHardwareIdentificationCommand.Unmarshal(m, b)
}
func (m *ProgramHardwareIdentificationCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgramHardwareIdentificationCommand.Marshal(b, m, deterministic)
}
func (m *ProgramHardwareIdentificationCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgramHardwareIdentificationCommand.Merge(m, src)
}
func (m *ProgramHardwareIdentificationCommand) XXX_Size() int {
	return xxx_messageInfo_ProgramHardwareIdentificationCommand.Size(m)
}
func (m *ProgramHardwareIdentificationCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgramHardwareIdentificationCommand.DiscardUnknown(m)
}

var xxx_messageInfo_ProgramHardwareIdentificationCommand proto.InternalMessageInfo

func (m *ProgramHardwareIdentificationCommand) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *ProgramHardwareIdentificationCommand) GetRootArticle() string {
	if m != nil {
		return m.RootArticle
	}
	return ""
}

func (m *ProgramHardwareIdentificationCommand) GetMajorVersion() uint32 {
	if m != nil {
		return m.MajorVersion
	}
	return 0
}

func (m *ProgramHardwareIdentificationCommand) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

type SetPersistentParameterCommand struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPersistentParameterCommand) Reset()         { *m = SetPersistentParameterCommand{} }
func (m *SetPersistentParameterCommand) String() string { return proto.CompactTextString(m) }
func (*SetPersistentParameterCommand) ProtoMessage()    {}
func (*SetPersistentParameterCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{2}
}

func (m *SetPersistentParameterCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPersistentParameterCommand.Unmarshal(m, b)
}
func (m *SetPersistentParameterCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPersistentParameterCommand.Marshal(b, m, deterministic)
}
func (m *SetPersistentParameterCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPersistentParameterCommand.Merge(m, src)
}
func (m *SetPersistentParameterCommand) XXX_Size() int {
	return xxx_messageInfo_SetPersistentParameterCommand.Size(m)
}
func (m *SetPersistentParameterCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPersistentParameterCommand.DiscardUnknown(m)
}

var xxx_messageInfo_SetPersistentParameterCommand proto.InternalMessageInfo

func (m *SetPersistentParameterCommand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetPersistentParameterCommand) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type GetPersistentParameterCommand struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPersistentParameterCommand) Reset()         { *m = GetPersistentParameterCommand{} }
func (m *GetPersistentParameterCommand) String() string { return proto.CompactTextString(m) }
func (*GetPersistentParameterCommand) ProtoMessage()    {}
func (*GetPersistentParameterCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{3}
}

func (m *GetPersistentParameterCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPersistentParameterCommand.Unmarshal(m, b)
}
func (m *GetPersistentParameterCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPersistentParameterCommand.Marshal(b, m, deterministic)
}
func (m *GetPersistentParameterCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPersistentParameterCommand.Merge(m, src)
}
func (m *GetPersistentParameterCommand) XXX_Size() int {
	return xxx_messageInfo_GetPersistentParameterCommand.Size(m)
}
func (m *GetPersistentParameterCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPersistentParameterCommand.DiscardUnknown(m)
}

var xxx_messageInfo_GetPersistentParameterCommand proto.InternalMessageInfo

func (m *GetPersistentParameterCommand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type IdentifyHardwareResponse struct {
	RootArticle          string   `protobuf:"bytes,1,opt,name=root_article,json=rootArticle,proto3" json:"root_article,omitempty"`
	MajorVersion         uint32   `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	SerialNumber         string   `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentifyHardwareResponse) Reset()         { *m = IdentifyHardwareResponse{} }
func (m *IdentifyHardwareResponse) String() string { return proto.CompactTextString(m) }
func (*IdentifyHardwareResponse) ProtoMessage()    {}
func (*IdentifyHardwareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{4}
}

func (m *IdentifyHardwareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifyHardwareResponse.Unmarshal(m, b)
}
func (m *IdentifyHardwareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifyHardwareResponse.Marshal(b, m, deterministic)
}
func (m *IdentifyHardwareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifyHardwareResponse.Merge(m, src)
}
func (m *IdentifyHardwareResponse) XXX_Size() int {
	return xxx_messageInfo_IdentifyHardwareResponse.Size(m)
}
func (m *IdentifyHardwareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifyHardwareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifyHardwareResponse proto.InternalMessageInfo

func (m *IdentifyHardwareResponse) GetRootArticle() string {
	if m != nil {
		return m.RootArticle
	}
	return ""
}

func (m *IdentifyHardwareResponse) GetMajorVersion() uint32 {
	if m != nil {
		return m.MajorVersion
	}
	return 0
}

func (m *IdentifyHardwareResponse) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

type IdentifyFirmwareResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentifyFirmwareResponse) Reset()         { *m = IdentifyFirmwareResponse{} }
func (m *IdentifyFirmwareResponse) String() string { return proto.CompactTextString(m) }
func (*IdentifyFirmwareResponse) ProtoMessage()    {}
func (*IdentifyFirmwareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{5}
}

func (m *IdentifyFirmwareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifyFirmwareResponse.Unmarshal(m, b)
}
func (m *IdentifyFirmwareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifyFirmwareResponse.Marshal(b, m, deterministic)
}
func (m *IdentifyFirmwareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifyFirmwareResponse.Merge(m, src)
}
func (m *IdentifyFirmwareResponse) XXX_Size() int {
	return xxx_messageInfo_IdentifyFirmwareResponse.Size(m)
}
func (m *IdentifyFirmwareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifyFirmwareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifyFirmwareResponse proto.InternalMessageInfo

func (m *IdentifyFirmwareResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IdentifyFirmwareResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type GetPersistentParameterResponse struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPersistentParameterResponse) Reset()         { *m = GetPersistentParameterResponse{} }
func (m *GetPersistentParameterResponse) String() string { return proto.CompactTextString(m) }
func (*GetPersistentParameterResponse) ProtoMessage()    {}
func (*GetPersistentParameterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{6}
}

func (m *GetPersistentParameterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPersistentParameterResponse.Unmarshal(m, b)
}
func (m *GetPersistentParameterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPersistentParameterResponse.Marshal(b, m, deterministic)
}
func (m *GetPersistentParameterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPersistentParameterResponse.Merge(m, src)
}
func (m *GetPersistentParameterResponse) XXX_Size() int {
	return xxx_messageInfo_GetPersistentParameterResponse.Size(m)
}
func (m *GetPersistentParameterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPersistentParameterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPersistentParameterResponse proto.InternalMessageInfo

func (m *GetPersistentParameterResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// The common messages
type CoreCommand struct {
	Id CommandId `protobuf:"varint,1,opt,name=id,proto3,enum=core.CommandId" json:"id,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*CoreCommand_LoadFirmwareChunk
	//	*CoreCommand_ProgramHardwareIdentification
	//	*CoreCommand_SetPersistentParameter
	//	*CoreCommand_GetPersistentParameter
	Data                 isCoreCommand_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CoreCommand) Reset()         { *m = CoreCommand{} }
func (m *CoreCommand) String() string { return proto.CompactTextString(m) }
func (*CoreCommand) ProtoMessage()    {}
func (*CoreCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{7}
}

func (m *CoreCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreCommand.Unmarshal(m, b)
}
func (m *CoreCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreCommand.Marshal(b, m, deterministic)
}
func (m *CoreCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreCommand.Merge(m, src)
}
func (m *CoreCommand) XXX_Size() int {
	return xxx_messageInfo_CoreCommand.Size(m)
}
func (m *CoreCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreCommand.DiscardUnknown(m)
}

var xxx_messageInfo_CoreCommand proto.InternalMessageInfo

func (m *CoreCommand) GetId() CommandId {
	if m != nil {
		return m.Id
	}
	return CommandId_IDENTIFY_HARDWARE
}

type isCoreCommand_Data interface {
	isCoreCommand_Data()
}

type CoreCommand_LoadFirmwareChunk struct {
	LoadFirmwareChunk *LoadFirmwareChunkCommand `protobuf:"bytes,2,opt,name=load_firmware_chunk,json=loadFirmwareChunk,proto3,oneof"`
}

type CoreCommand_ProgramHardwareIdentification struct {
	ProgramHardwareIdentification *ProgramHardwareIdentificationCommand `protobuf:"bytes,3,opt,name=program_hardware_identification,json=programHardwareIdentification,proto3,oneof"`
}

type CoreCommand_SetPersistentParameter struct {
	SetPersistentParameter *SetPersistentParameterCommand `protobuf:"bytes,4,opt,name=set_persistent_parameter,json=setPersistentParameter,proto3,oneof"`
}

type CoreCommand_GetPersistentParameter struct {
	GetPersistentParameter *GetPersistentParameterCommand `protobuf:"bytes,5,opt,name=get_persistent_parameter,json=getPersistentParameter,proto3,oneof"`
}

func (*CoreCommand_LoadFirmwareChunk) isCoreCommand_Data() {}

func (*CoreCommand_ProgramHardwareIdentification) isCoreCommand_Data() {}

func (*CoreCommand_SetPersistentParameter) isCoreCommand_Data() {}

func (*CoreCommand_GetPersistentParameter) isCoreCommand_Data() {}

func (m *CoreCommand) GetData() isCoreCommand_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CoreCommand) GetLoadFirmwareChunk() *LoadFirmwareChunkCommand {
	if x, ok := m.GetData().(*CoreCommand_LoadFirmwareChunk); ok {
		return x.LoadFirmwareChunk
	}
	return nil
}

func (m *CoreCommand) GetProgramHardwareIdentification() *ProgramHardwareIdentificationCommand {
	if x, ok := m.GetData().(*CoreCommand_ProgramHardwareIdentification); ok {
		return x.ProgramHardwareIdentification
	}
	return nil
}

func (m *CoreCommand) GetSetPersistentParameter() *SetPersistentParameterCommand {
	if x, ok := m.GetData().(*CoreCommand_SetPersistentParameter); ok {
		return x.SetPersistentParameter
	}
	return nil
}

func (m *CoreCommand) GetGetPersistentParameter() *GetPersistentParameterCommand {
	if x, ok := m.GetData().(*CoreCommand_GetPersistentParameter); ok {
		return x.GetPersistentParameter
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CoreCommand) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CoreCommand_LoadFirmwareChunk)(nil),
		(*CoreCommand_ProgramHardwareIdentification)(nil),
		(*CoreCommand_SetPersistentParameter)(nil),
		(*CoreCommand_GetPersistentParameter)(nil),
	}
}

type CoreResponse struct {
	Id            CommandId `protobuf:"varint,1,opt,name=id,proto3,enum=core.CommandId" json:"id,omitempty"`
	Status        Status    `protobuf:"varint,2,opt,name=status,proto3,enum=core.Status" json:"status,omitempty"`
	RestartingNow bool      `protobuf:"varint,3,opt,name=restarting_now,json=restartingNow,proto3" json:"restarting_now,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*CoreResponse_IdentifyHardware
	//	*CoreResponse_IdentifyFirmware
	//	*CoreResponse_PersistentParameter
	Data                 isCoreResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CoreResponse) Reset()         { *m = CoreResponse{} }
func (m *CoreResponse) String() string { return proto.CompactTextString(m) }
func (*CoreResponse) ProtoMessage()    {}
func (*CoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{8}
}

func (m *CoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreResponse.Unmarshal(m, b)
}
func (m *CoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreResponse.Marshal(b, m, deterministic)
}
func (m *CoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreResponse.Merge(m, src)
}
func (m *CoreResponse) XXX_Size() int {
	return xxx_messageInfo_CoreResponse.Size(m)
}
func (m *CoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreResponse proto.InternalMessageInfo

func (m *CoreResponse) GetId() CommandId {
	if m != nil {
		return m.Id
	}
	return CommandId_IDENTIFY_HARDWARE
}

func (m *CoreResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

func (m *CoreResponse) GetRestartingNow() bool {
	if m != nil {
		return m.RestartingNow
	}
	return false
}

type isCoreResponse_Data interface {
	isCoreResponse_Data()
}

type CoreResponse_IdentifyHardware struct {
	IdentifyHardware *IdentifyHardwareResponse `protobuf:"bytes,4,opt,name=identify_hardware,json=identifyHardware,proto3,oneof"`
}

type CoreResponse_IdentifyFirmware struct {
	IdentifyFirmware *IdentifyFirmwareResponse `protobuf:"bytes,5,opt,name=identify_firmware,json=identifyFirmware,proto3,oneof"`
}

type CoreResponse_PersistentParameter struct {
	PersistentParameter *GetPersistentParameterResponse `protobuf:"bytes,6,opt,name=persistent_parameter,json=persistentParameter,proto3,oneof"`
}

func (*CoreResponse_IdentifyHardware) isCoreResponse_Data() {}

func (*CoreResponse_IdentifyFirmware) isCoreResponse_Data() {}

func (*CoreResponse_PersistentParameter) isCoreResponse_Data() {}

func (m *CoreResponse) GetData() isCoreResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CoreResponse) GetIdentifyHardware() *IdentifyHardwareResponse {
	if x, ok := m.GetData().(*CoreResponse_IdentifyHardware); ok {
		return x.IdentifyHardware
	}
	return nil
}

func (m *CoreResponse) GetIdentifyFirmware() *IdentifyFirmwareResponse {
	if x, ok := m.GetData().(*CoreResponse_IdentifyFirmware); ok {
		return x.IdentifyFirmware
	}
	return nil
}

func (m *CoreResponse) GetPersistentParameter() *GetPersistentParameterResponse {
	if x, ok := m.GetData().(*CoreResponse_PersistentParameter); ok {
		return x.PersistentParameter
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CoreResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CoreResponse_IdentifyHardware)(nil),
		(*CoreResponse_IdentifyFirmware)(nil),
		(*CoreResponse_PersistentParameter)(nil),
	}
}

func init() {
	proto.RegisterEnum("core.CommandId", CommandId_name, CommandId_value)
	proto.RegisterEnum("core.Status", Status_name, Status_value)
	proto.RegisterType((*LoadFirmwareChunkCommand)(nil), "core.LoadFirmwareChunkCommand")
	proto.RegisterType((*ProgramHardwareIdentificationCommand)(nil), "core.ProgramHardwareIdentificationCommand")
	proto.RegisterType((*SetPersistentParameterCommand)(nil), "core.SetPersistentParameterCommand")
	proto.RegisterType((*GetPersistentParameterCommand)(nil), "core.GetPersistentParameterCommand")
	proto.RegisterType((*IdentifyHardwareResponse)(nil), "core.IdentifyHardwareResponse")
	proto.RegisterType((*IdentifyFirmwareResponse)(nil), "core.IdentifyFirmwareResponse")
	proto.RegisterType((*GetPersistentParameterResponse)(nil), "core.GetPersistentParameterResponse")
	proto.RegisterType((*CoreCommand)(nil), "core.CoreCommand")
	proto.RegisterType((*CoreResponse)(nil), "core.CoreResponse")
}

func init() { proto.RegisterFile("core.proto", fileDescriptor_f7e43720d1edc0fe) }

var fileDescriptor_f7e43720d1edc0fe = []byte{
	// 878 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xed, 0x4e, 0xe3, 0x46,
	0x14, 0x8d, 0x93, 0x10, 0xc8, 0x4d, 0x02, 0x66, 0xd8, 0xb6, 0x91, 0xba, 0x2c, 0x34, 0x50, 0x09,
	0xf1, 0x63, 0xab, 0x66, 0xa5, 0xfe, 0x37, 0x89, 0x89, 0x2d, 0x9c, 0x71, 0x3a, 0xf1, 0x82, 0xd8,
	0x3f, 0xa3, 0x59, 0xec, 0x0d, 0x6e, 0x13, 0x3b, 0x1a, 0x4f, 0x40, 0xfb, 0x04, 0x7d, 0x9e, 0xbe,
	0xc1, 0x3e, 0x46, 0x5f, 0xa6, 0x52, 0x35, 0xe3, 0x0f, 0x02, 0x4d, 0x58, 0xf6, 0x9f, 0x7d, 0xee,
	0xf8, 0xdc, 0x73, 0xcf, 0xb9, 0x93, 0x00, 0xdc, 0xc4, 0x3c, 0x78, 0x3b, 0xe7, 0xb1, 0x88, 0x51,
	0x55, 0x3e, 0x77, 0x16, 0xd0, 0x76, 0x62, 0xe6, 0x9f, 0x87, 0x7c, 0x76, 0xcf, 0x78, 0xd0, 0xbb,
	0x5d, 0x44, 0x7f, 0xf6, 0xe2, 0xd9, 0x8c, 0x45, 0x3e, 0xfa, 0x09, 0x9a, 0x37, 0xf2, 0x9d, 0x46,
	0x8b, 0xd9, 0xc7, 0x80, 0xb7, 0xb5, 0x43, 0xed, 0xa4, 0x45, 0x1a, 0x0a, 0xc3, 0x0a, 0x42, 0x1d,
	0x68, 0x85, 0x09, 0x9d, 0xb2, 0x44, 0x50, 0x05, 0xb7, 0xcb, 0x87, 0xda, 0xc9, 0x16, 0x69, 0x84,
	0x89, 0xc3, 0x12, 0xa1, 0xd8, 0x10, 0x82, 0xaa, 0xcf, 0x04, 0x6b, 0x57, 0x0e, 0xb5, 0x93, 0x26,
	0x51, 0xcf, 0x9d, 0xbf, 0x35, 0x38, 0x1e, 0xf1, 0x78, 0xc2, 0xd9, 0xcc, 0x62, 0xdc, 0x97, 0xad,
	0x6d, 0x3f, 0x88, 0x44, 0xf8, 0x29, 0xbc, 0x61, 0x22, 0x8c, 0xa3, 0x5c, 0xc3, 0x6b, 0xa8, 0x27,
	0xe1, 0x24, 0x62, 0x62, 0xc1, 0x03, 0x25, 0xa0, 0x4e, 0x1e, 0x00, 0xa9, 0x90, 0xc7, 0xb1, 0xa0,
	0x8c, 0x8b, 0xf0, 0x66, 0x1a, 0xa8, 0xee, 0x75, 0xd2, 0x90, 0x98, 0x91, 0x42, 0xe8, 0x08, 0x5a,
	0x33, 0xf6, 0x47, 0xcc, 0xe9, 0x5d, 0xc0, 0x93, 0x30, 0x8e, 0x94, 0x8c, 0x16, 0x69, 0x2a, 0xf0,
	0x32, 0xc5, 0xe4, 0xa1, 0x24, 0xe0, 0x21, 0x9b, 0xe6, 0xa3, 0x56, 0x15, 0x51, 0x33, 0x05, 0xd3,
	0x59, 0x3b, 0x36, 0xec, 0x8f, 0x03, 0x31, 0x92, 0x9f, 0x24, 0x22, 0x88, 0xc4, 0x88, 0x71, 0x36,
	0x0b, 0x44, 0xc0, 0x73, 0xad, 0x08, 0xaa, 0x11, 0x9b, 0xe5, 0x32, 0xd5, 0x33, 0x7a, 0x05, 0x1b,
	0x77, 0x6c, 0xba, 0xc8, 0xa5, 0xa5, 0x2f, 0x9d, 0x77, 0xb0, 0x3f, 0xf8, 0x56, 0xaa, 0xce, 0x5f,
	0x1a, 0xb4, 0x33, 0x93, 0x3e, 0xe7, 0xa6, 0x91, 0x20, 0x99, 0xc7, 0x51, 0xf2, 0x7f, 0x27, 0xb4,
	0x17, 0x38, 0x51, 0x7e, 0x89, 0x13, 0x95, 0x15, 0x4e, 0x58, 0x0f, 0x42, 0xf2, 0xc5, 0x29, 0x84,
	0xac, 0x32, 0xa1, 0x0d, 0x9b, 0xcb, 0x3d, 0xeb, 0x24, 0x7f, 0xed, 0xfc, 0x06, 0x6f, 0x56, 0x1b,
	0x51, 0xf0, 0x15, 0x06, 0x6a, 0xcb, 0x06, 0x7e, 0xa9, 0x40, 0xa3, 0x17, 0xf3, 0x20, 0xf7, 0xeb,
	0x00, 0xca, 0xa1, 0xaf, 0x8e, 0x6c, 0x77, 0x77, 0xde, 0xaa, 0x2d, 0xcf, 0x4a, 0xb6, 0x4f, 0xca,
	0xa1, 0x8f, 0x46, 0xb0, 0x37, 0x8d, 0x99, 0x4f, 0x3f, 0x65, 0x7a, 0x97, 0xd6, 0xb5, 0xd1, 0x7d,
	0x93, 0x7e, 0xb1, 0xee, 0x22, 0x58, 0x25, 0xb2, 0x3b, 0x7d, 0x5a, 0x43, 0x02, 0x0e, 0xe6, 0xe9,
	0x06, 0xd3, 0xdb, 0x2c, 0x0d, 0x1a, 0x3e, 0xda, 0x61, 0xe5, 0x5d, 0xa3, 0x7b, 0x9a, 0xb2, 0xbf,
	0x64, 0xdd, 0xad, 0x12, 0xd9, 0x9f, 0x3f, 0x77, 0x0e, 0x51, 0x68, 0x27, 0x81, 0xa0, 0xf3, 0xc2,
	0x31, 0x3a, 0xcf, 0x2d, 0x53, 0x4b, 0xdb, 0xe8, 0x1e, 0xa5, 0xed, 0x9e, 0x5d, 0x55, 0xab, 0x44,
	0xbe, 0x4f, 0x56, 0x1e, 0x90, 0x0d, 0x26, 0xeb, 0x1a, 0x6c, 0x2c, 0x37, 0x18, 0x7c, 0xad, 0xc1,
	0x64, 0xe5, 0x81, 0xb3, 0x5a, 0xfa, 0x73, 0xd0, 0xf9, 0xb7, 0x0c, 0x4d, 0x19, 0x61, 0x91, 0xf4,
	0x57, 0x33, 0x3c, 0x86, 0x5a, 0x22, 0x98, 0x58, 0x24, 0x2a, 0xb6, 0xed, 0x6e, 0x33, 0x9b, 0x54,
	0x61, 0x24, 0xab, 0xa1, 0x9f, 0x61, 0x9b, 0x07, 0x89, 0x90, 0x17, 0x21, 0x9a, 0xd0, 0x28, 0xbe,
	0x57, 0x31, 0x6c, 0x91, 0xd6, 0x03, 0x8a, 0xe3, 0x7b, 0x34, 0x84, 0xdd, 0x2c, 0xad, 0xcf, 0x45,
	0x7e, 0x99, 0x83, 0xd9, 0x3a, 0xac, 0xbb, 0x6b, 0x56, 0x89, 0xe8, 0xe1, 0x93, 0xda, 0x23, 0xba,
	0x7c, 0xc7, 0x32, 0xbf, 0x9e, 0xd0, 0x3d, 0xbd, 0x31, 0xcb, 0x74, 0x79, 0x0d, 0x5d, 0xc3, 0xab,
	0x95, 0x09, 0xd4, 0x14, 0xe3, 0xf1, 0x73, 0x09, 0x2c, 0xf1, 0xee, 0xcd, 0xd7, 0xfb, 0x7f, 0xfa,
	0x45, 0x83, 0x7a, 0xe1, 0x2f, 0xfa, 0x0e, 0x76, 0xed, 0xbe, 0x89, 0x3d, 0xfb, 0xfc, 0x9a, 0x5a,
	0x06, 0xe9, 0x5f, 0x19, 0xc4, 0xd4, 0x4b, 0x8f, 0xe0, 0x73, 0x9b, 0x0c, 0x15, 0xac, 0xa1, 0x1f,
	0x60, 0xcf, 0x71, 0x8d, 0x7e, 0x01, 0xd1, 0x9e, 0xf5, 0x1e, 0x5f, 0xe8, 0x65, 0x74, 0x04, 0x07,
	0x23, 0xe2, 0x0e, 0x88, 0x31, 0x2c, 0x58, 0x68, 0x46, 0x60, 0xf7, 0x0c, 0xcf, 0x76, 0xb1, 0x5e,
	0x41, 0x0d, 0xd8, 0x24, 0xe6, 0xd8, 0x33, 0x88, 0xa7, 0x57, 0xd1, 0x6b, 0x68, 0x8f, 0x4d, 0x8f,
	0x8e, 0x4c, 0x32, 0xb6, 0xc7, 0x9e, 0x89, 0x3d, 0x3a, 0x32, 0x88, 0x31, 0x34, 0x3d, 0x93, 0xe8,
	0x1b, 0xb2, 0x3a, 0x58, 0x57, 0xad, 0x9d, 0xfe, 0xa3, 0x41, 0x2d, 0x4d, 0x1f, 0xd5, 0xa0, 0xec,
	0x5e, 0xe8, 0x25, 0xb4, 0x07, 0x3b, 0xef, 0xf1, 0x05, 0x76, 0xaf, 0x30, 0xed, 0xb9, 0xc3, 0xa1,
	0x81, 0xfb, 0xba, 0xa6, 0xa6, 0x70, 0x1c, 0x73, 0x60, 0x38, 0x4b, 0x9f, 0x97, 0xd1, 0x2e, 0xb4,
	0xce, 0x8c, 0x7e, 0xaa, 0x9d, 0x8e, 0xcd, 0xdf, 0xf5, 0x0a, 0x42, 0xb0, 0xbd, 0x04, 0xd9, 0x1f,
	0x4c, 0xbd, 0x2a, 0x31, 0xec, 0x7a, 0x92, 0x6e, 0x64, 0x78, 0xf6, 0x99, 0x63, 0xea, 0x1b, 0x12,
	0xb3, 0xb1, 0x67, 0x12, 0x6c, 0x38, 0xd4, 0x24, 0xc4, 0x25, 0x7a, 0x4d, 0x76, 0xc9, 0x66, 0x1f,
	0xda, 0x78, 0x90, 0xc1, 0x9b, 0x52, 0x11, 0x76, 0xa9, 0x75, 0x45, 0x6d, 0x7c, 0x69, 0x62, 0xcf,
	0x25, 0xd7, 0xfa, 0x16, 0x3a, 0x80, 0x1f, 0x3d, 0xcb, 0x1e, 0xd3, 0x4b, 0x39, 0x98, 0x8b, 0xe9,
	0xb9, 0x61, 0x3b, 0x66, 0x9f, 0x1a, 0x0e, 0x31, 0x8d, 0xfe, 0xb5, 0x5e, 0x3f, 0xdb, 0xf9, 0xd0,
	0x92, 0x19, 0xff, 0x72, 0xf7, 0x2b, 0x9b, 0xce, 0x6f, 0x59, 0xf7, 0x63, 0x4d, 0xfd, 0x6b, 0xbf,
	0xfb, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x18, 0xeb, 0x15, 0xee, 0xc3, 0x07, 0x00, 0x00,
}
