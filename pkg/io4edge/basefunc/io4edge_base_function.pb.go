// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: io4edge_base_function.proto

package basefunc

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseFuncCommandId int32

const (
	BaseFuncCommandId_IDENTIFY_HARDWARE   BaseFuncCommandId = 0
	BaseFuncCommandId_IDENTIFY_FIRMWARE   BaseFuncCommandId = 1
	BaseFuncCommandId_LOAD_FIRMWARE_CHUNK BaseFuncCommandId = 2
)

// Enum value maps for BaseFuncCommandId.
var (
	BaseFuncCommandId_name = map[int32]string{
		0: "IDENTIFY_HARDWARE",
		1: "IDENTIFY_FIRMWARE",
		2: "LOAD_FIRMWARE_CHUNK",
	}
	BaseFuncCommandId_value = map[string]int32{
		"IDENTIFY_HARDWARE":   0,
		"IDENTIFY_FIRMWARE":   1,
		"LOAD_FIRMWARE_CHUNK": 2,
	}
)

func (x BaseFuncCommandId) Enum() *BaseFuncCommandId {
	p := new(BaseFuncCommandId)
	*p = x
	return p
}

func (x BaseFuncCommandId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BaseFuncCommandId) Descriptor() protoreflect.EnumDescriptor {
	return file_io4edge_base_function_proto_enumTypes[0].Descriptor()
}

func (BaseFuncCommandId) Type() protoreflect.EnumType {
	return &file_io4edge_base_function_proto_enumTypes[0]
}

func (x BaseFuncCommandId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BaseFuncCommandId.Descriptor instead.
func (BaseFuncCommandId) EnumDescriptor() ([]byte, []int) {
	return file_io4edge_base_function_proto_rawDescGZIP(), []int{0}
}

type BaseFuncStatus int32

const (
	BaseFuncStatus_OK                BaseFuncStatus = 0
	BaseFuncStatus_UNKNOWN_COMMAND   BaseFuncStatus = 1
	BaseFuncStatus_PROGRAMMING_ERROR BaseFuncStatus = 2
	BaseFuncStatus_CHUNK_SEQ_ERROR   BaseFuncStatus = 3
	BaseFuncStatus_NOT_COMPATIBLE    BaseFuncStatus = 4
)

// Enum value maps for BaseFuncStatus.
var (
	BaseFuncStatus_name = map[int32]string{
		0: "OK",
		1: "UNKNOWN_COMMAND",
		2: "PROGRAMMING_ERROR",
		3: "CHUNK_SEQ_ERROR",
		4: "NOT_COMPATIBLE",
	}
	BaseFuncStatus_value = map[string]int32{
		"OK":                0,
		"UNKNOWN_COMMAND":   1,
		"PROGRAMMING_ERROR": 2,
		"CHUNK_SEQ_ERROR":   3,
		"NOT_COMPATIBLE":    4,
	}
)

func (x BaseFuncStatus) Enum() *BaseFuncStatus {
	p := new(BaseFuncStatus)
	*p = x
	return p
}

func (x BaseFuncStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BaseFuncStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_io4edge_base_function_proto_enumTypes[1].Descriptor()
}

func (BaseFuncStatus) Type() protoreflect.EnumType {
	return &file_io4edge_base_function_proto_enumTypes[1]
}

func (x BaseFuncStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BaseFuncStatus.Descriptor instead.
func (BaseFuncStatus) EnumDescriptor() ([]byte, []int) {
	return file_io4edge_base_function_proto_rawDescGZIP(), []int{1}
}

type SerialNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi uint64 `protobuf:"varint,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo uint64 `protobuf:"varint,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *SerialNumber) Reset() {
	*x = SerialNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io4edge_base_function_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerialNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerialNumber) ProtoMessage() {}

func (x *SerialNumber) ProtoReflect() protoreflect.Message {
	mi := &file_io4edge_base_function_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerialNumber.ProtoReflect.Descriptor instead.
func (*SerialNumber) Descriptor() ([]byte, []int) {
	return file_io4edge_base_function_proto_rawDescGZIP(), []int{0}
}

func (x *SerialNumber) GetHi() uint64 {
	if x != nil {
		return x.Hi
	}
	return 0
}

func (x *SerialNumber) GetLo() uint64 {
	if x != nil {
		return x.Lo
	}
	return 0
}

// LoadFirmware
// Client sends sequence of CmdLoadFirmwareChunk commands, with increasing
// chunk numbers. Clients defines chunk size.
// Server must acknowledge each chunk with Response.
// Last chunk has is_last_chunk set to True, so server knows that programming has finished
type CmdLoadFirmwareChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkNumber uint32 `protobuf:"varint,1,opt,name=chunk_number,json=chunkNumber,proto3" json:"chunk_number,omitempty"`
	IsLastChunk bool   `protobuf:"varint,2,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	Data        []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CmdLoadFirmwareChunk) Reset() {
	*x = CmdLoadFirmwareChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io4edge_base_function_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdLoadFirmwareChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdLoadFirmwareChunk) ProtoMessage() {}

func (x *CmdLoadFirmwareChunk) ProtoReflect() protoreflect.Message {
	mi := &file_io4edge_base_function_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdLoadFirmwareChunk.ProtoReflect.Descriptor instead.
func (*CmdLoadFirmwareChunk) Descriptor() ([]byte, []int) {
	return file_io4edge_base_function_proto_rawDescGZIP(), []int{1}
}

func (x *CmdLoadFirmwareChunk) GetChunkNumber() uint32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *CmdLoadFirmwareChunk) GetIsLastChunk() bool {
	if x != nil {
		return x.IsLastChunk
	}
	return false
}

func (x *CmdLoadFirmwareChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResIdentifyHardware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootArticle  string        `protobuf:"bytes,1,opt,name=root_article,json=rootArticle,proto3" json:"root_article,omitempty"`
	MajorVersion uint32        `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	SerialNumber *SerialNumber `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *ResIdentifyHardware) Reset() {
	*x = ResIdentifyHardware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io4edge_base_function_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIdentifyHardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIdentifyHardware) ProtoMessage() {}

func (x *ResIdentifyHardware) ProtoReflect() protoreflect.Message {
	mi := &file_io4edge_base_function_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIdentifyHardware.ProtoReflect.Descriptor instead.
func (*ResIdentifyHardware) Descriptor() ([]byte, []int) {
	return file_io4edge_base_function_proto_rawDescGZIP(), []int{2}
}

func (x *ResIdentifyHardware) GetRootArticle() string {
	if x != nil {
		return x.RootArticle
	}
	return ""
}

func (x *ResIdentifyHardware) GetMajorVersion() uint32 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *ResIdentifyHardware) GetSerialNumber() *SerialNumber {
	if x != nil {
		return x.SerialNumber
	}
	return nil
}

type ResIdentifyFirmware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MajorVersion uint32 `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion uint32 `protobuf:"varint,3,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	PatchVersion uint32 `protobuf:"varint,4,opt,name=patch_version,json=patchVersion,proto3" json:"patch_version,omitempty"`
}

func (x *ResIdentifyFirmware) Reset() {
	*x = ResIdentifyFirmware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io4edge_base_function_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIdentifyFirmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIdentifyFirmware) ProtoMessage() {}

func (x *ResIdentifyFirmware) ProtoReflect() protoreflect.Message {
	mi := &file_io4edge_base_function_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIdentifyFirmware.ProtoReflect.Descriptor instead.
func (*ResIdentifyFirmware) Descriptor() ([]byte, []int) {
	return file_io4edge_base_function_proto_rawDescGZIP(), []int{3}
}

func (x *ResIdentifyFirmware) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResIdentifyFirmware) GetMajorVersion() uint32 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *ResIdentifyFirmware) GetMinorVersion() uint32 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

func (x *ResIdentifyFirmware) GetPatchVersion() uint32 {
	if x != nil {
		return x.PatchVersion
	}
	return 0
}

// The common messages
type BaseFuncCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id BaseFuncCommandId `protobuf:"varint,1,opt,name=id,proto3,enum=io4edgeBaseFunction.BaseFuncCommandId" json:"id,omitempty"`
	// Types that are assignable to Data:
	//	*BaseFuncCommand_LoadFirmwareChunk
	Data isBaseFuncCommand_Data `protobuf_oneof:"data"`
}

func (x *BaseFuncCommand) Reset() {
	*x = BaseFuncCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io4edge_base_function_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseFuncCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseFuncCommand) ProtoMessage() {}

func (x *BaseFuncCommand) ProtoReflect() protoreflect.Message {
	mi := &file_io4edge_base_function_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseFuncCommand.ProtoReflect.Descriptor instead.
func (*BaseFuncCommand) Descriptor() ([]byte, []int) {
	return file_io4edge_base_function_proto_rawDescGZIP(), []int{4}
}

func (x *BaseFuncCommand) GetId() BaseFuncCommandId {
	if x != nil {
		return x.Id
	}
	return BaseFuncCommandId_IDENTIFY_HARDWARE
}

func (m *BaseFuncCommand) GetData() isBaseFuncCommand_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *BaseFuncCommand) GetLoadFirmwareChunk() *CmdLoadFirmwareChunk {
	if x, ok := x.GetData().(*BaseFuncCommand_LoadFirmwareChunk); ok {
		return x.LoadFirmwareChunk
	}
	return nil
}

type isBaseFuncCommand_Data interface {
	isBaseFuncCommand_Data()
}

type BaseFuncCommand_LoadFirmwareChunk struct {
	LoadFirmwareChunk *CmdLoadFirmwareChunk `protobuf:"bytes,2,opt,name=load_firmware_chunk,json=loadFirmwareChunk,proto3,oneof"`
}

func (*BaseFuncCommand_LoadFirmwareChunk) isBaseFuncCommand_Data() {}

type BaseFuncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     BaseFuncCommandId `protobuf:"varint,1,opt,name=id,proto3,enum=io4edgeBaseFunction.BaseFuncCommandId" json:"id,omitempty"`
	Status BaseFuncStatus    `protobuf:"varint,2,opt,name=status,proto3,enum=io4edgeBaseFunction.BaseFuncStatus" json:"status,omitempty"`
	// Types that are assignable to Data:
	//	*BaseFuncResponse_IdentifyHardware
	//	*BaseFuncResponse_IdentifyFirmware
	Data isBaseFuncResponse_Data `protobuf_oneof:"data"`
}

func (x *BaseFuncResponse) Reset() {
	*x = BaseFuncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io4edge_base_function_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseFuncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseFuncResponse) ProtoMessage() {}

func (x *BaseFuncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_io4edge_base_function_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseFuncResponse.ProtoReflect.Descriptor instead.
func (*BaseFuncResponse) Descriptor() ([]byte, []int) {
	return file_io4edge_base_function_proto_rawDescGZIP(), []int{5}
}

func (x *BaseFuncResponse) GetId() BaseFuncCommandId {
	if x != nil {
		return x.Id
	}
	return BaseFuncCommandId_IDENTIFY_HARDWARE
}

func (x *BaseFuncResponse) GetStatus() BaseFuncStatus {
	if x != nil {
		return x.Status
	}
	return BaseFuncStatus_OK
}

func (m *BaseFuncResponse) GetData() isBaseFuncResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *BaseFuncResponse) GetIdentifyHardware() *ResIdentifyHardware {
	if x, ok := x.GetData().(*BaseFuncResponse_IdentifyHardware); ok {
		return x.IdentifyHardware
	}
	return nil
}

func (x *BaseFuncResponse) GetIdentifyFirmware() *ResIdentifyFirmware {
	if x, ok := x.GetData().(*BaseFuncResponse_IdentifyFirmware); ok {
		return x.IdentifyFirmware
	}
	return nil
}

type isBaseFuncResponse_Data interface {
	isBaseFuncResponse_Data()
}

type BaseFuncResponse_IdentifyHardware struct {
	IdentifyHardware *ResIdentifyHardware `protobuf:"bytes,3,opt,name=identify_hardware,json=identifyHardware,proto3,oneof"`
}

type BaseFuncResponse_IdentifyFirmware struct {
	IdentifyFirmware *ResIdentifyFirmware `protobuf:"bytes,4,opt,name=identify_firmware,json=identifyFirmware,proto3,oneof"`
}

func (*BaseFuncResponse_IdentifyHardware) isBaseFuncResponse_Data() {}

func (*BaseFuncResponse_IdentifyFirmware) isBaseFuncResponse_Data() {}

var File_io4edge_base_function_proto protoreflect.FileDescriptor

var file_io4edge_base_function_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x69, 0x6f, 0x34, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x69,
	0x6f, 0x34, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x68, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x6c, 0x6f, 0x22, 0x71, 0x0a, 0x14, 0x43, 0x6d, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0d, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69,
	0x6f, 0x34, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x98, 0x01,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x73,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x34, 0x65, 0x64,
	0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x13, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x34, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6d, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x11,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x02, 0x0a, 0x10, 0x42, 0x61,
	0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x34,
	0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x69, 0x6f, 0x34, 0x65, 0x64, 0x67, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x57, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x5f,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x69, 0x6f, 0x34, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79,
	0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x79, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x57, 0x0a, 0x11,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x34, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x48, 0x00, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x5a, 0x0a,
	0x11, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x48,
	0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x46, 0x49, 0x52, 0x4d, 0x57, 0x41, 0x52, 0x45, 0x10, 0x01,
	0x12, 0x17, 0x0a, 0x13, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x4d, 0x57, 0x41, 0x52,
	0x45, 0x5f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0x02, 0x2a, 0x6d, 0x0a, 0x0e, 0x42, 0x61, 0x73,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x41, 0x4d, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x51, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x41, 0x54, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x42, 0x16, 0x5a, 0x14, 0x70, 0x6b, 0x67, 0x2f,
	0x69, 0x6f, 0x34, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x66, 0x75, 0x6e, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_io4edge_base_function_proto_rawDescOnce sync.Once
	file_io4edge_base_function_proto_rawDescData = file_io4edge_base_function_proto_rawDesc
)

func file_io4edge_base_function_proto_rawDescGZIP() []byte {
	file_io4edge_base_function_proto_rawDescOnce.Do(func() {
		file_io4edge_base_function_proto_rawDescData = protoimpl.X.CompressGZIP(file_io4edge_base_function_proto_rawDescData)
	})
	return file_io4edge_base_function_proto_rawDescData
}

var file_io4edge_base_function_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_io4edge_base_function_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_io4edge_base_function_proto_goTypes = []interface{}{
	(BaseFuncCommandId)(0),       // 0: io4edgeBaseFunction.BaseFuncCommandId
	(BaseFuncStatus)(0),          // 1: io4edgeBaseFunction.BaseFuncStatus
	(*SerialNumber)(nil),         // 2: io4edgeBaseFunction.SerialNumber
	(*CmdLoadFirmwareChunk)(nil), // 3: io4edgeBaseFunction.CmdLoadFirmwareChunk
	(*ResIdentifyHardware)(nil),  // 4: io4edgeBaseFunction.ResIdentifyHardware
	(*ResIdentifyFirmware)(nil),  // 5: io4edgeBaseFunction.ResIdentifyFirmware
	(*BaseFuncCommand)(nil),      // 6: io4edgeBaseFunction.BaseFuncCommand
	(*BaseFuncResponse)(nil),     // 7: io4edgeBaseFunction.BaseFuncResponse
}
var file_io4edge_base_function_proto_depIdxs = []int32{
	2, // 0: io4edgeBaseFunction.ResIdentifyHardware.serial_number:type_name -> io4edgeBaseFunction.SerialNumber
	0, // 1: io4edgeBaseFunction.BaseFuncCommand.id:type_name -> io4edgeBaseFunction.BaseFuncCommandId
	3, // 2: io4edgeBaseFunction.BaseFuncCommand.load_firmware_chunk:type_name -> io4edgeBaseFunction.CmdLoadFirmwareChunk
	0, // 3: io4edgeBaseFunction.BaseFuncResponse.id:type_name -> io4edgeBaseFunction.BaseFuncCommandId
	1, // 4: io4edgeBaseFunction.BaseFuncResponse.status:type_name -> io4edgeBaseFunction.BaseFuncStatus
	4, // 5: io4edgeBaseFunction.BaseFuncResponse.identify_hardware:type_name -> io4edgeBaseFunction.ResIdentifyHardware
	5, // 6: io4edgeBaseFunction.BaseFuncResponse.identify_firmware:type_name -> io4edgeBaseFunction.ResIdentifyFirmware
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_io4edge_base_function_proto_init() }
func file_io4edge_base_function_proto_init() {
	if File_io4edge_base_function_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_io4edge_base_function_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerialNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io4edge_base_function_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdLoadFirmwareChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io4edge_base_function_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIdentifyHardware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io4edge_base_function_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIdentifyFirmware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io4edge_base_function_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseFuncCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io4edge_base_function_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseFuncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_io4edge_base_function_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*BaseFuncCommand_LoadFirmwareChunk)(nil),
	}
	file_io4edge_base_function_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*BaseFuncResponse_IdentifyHardware)(nil),
		(*BaseFuncResponse_IdentifyFirmware)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_io4edge_base_function_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io4edge_base_function_proto_goTypes,
		DependencyIndexes: file_io4edge_base_function_proto_depIdxs,
		EnumInfos:         file_io4edge_base_function_proto_enumTypes,
		MessageInfos:      file_io4edge_base_function_proto_msgTypes,
	}.Build()
	File_io4edge_base_function_proto = out.File
	file_io4edge_base_function_proto_rawDesc = nil
	file_io4edge_base_function_proto_goTypes = nil
	file_io4edge_base_function_proto_depIdxs = nil
}
