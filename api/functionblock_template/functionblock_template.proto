/*
Copyright Â© 2021 Ci4Rail GmbH <engineering@ci4rail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

package exampleTypeA;
option go_package = "exampleTypeA/v1alpha1";

// ============= ConfigurationControl =================
// ConfigurationControlSet to pass to Functionblock.ConfigurationControl.functionSpecificConfigurationControlSet hook
message ConfigurationControlSet {
    // put here your fields
}

// ConfigurationControlSetResponse to pass to Functionblock.ConfigurationControl.functionSpecificConfigurationControlSetResponse hook
message ConfigurationControlSetResponse {
    // put here your fields
    // default: no parameters
}

// ConfigurationControlGet to pass to Functionblock.ConfigurationControl.functionSpecificConfigurationControlGet hook
message ConfigurationControlGet {
    // put here your fields
    // default: no parameters
}

// ConfigurationControlGetResponse to pass to Functionblock.ConfigurationGetResponse.functionSpecificConfigurationControlGetResponse hook
// Returns the current hardware configuration
message ConfigurationControlGetResponse {
    // put here your fields
}

// ConfigurationControlResponse to pass to Functionblock.ConfigurationControlResponse.functionSpecificConfigurationControlResponse hook
message ConfigurationControlResponse {
    oneof type {
        ConfigurationControlGetResponse set = 1;
        ConfigurationControlSetResponse get = 2;
    }
}

// ============= FunctionControl =================
// Sets the value of a single binary channel
message SetSingle {
    // put here your fields
}

// Sets all binary channels
message SetAll {
    // put here your fields
}

// Gets the current value of a single binary channel
message GetSingle {
    // put here your fields
}

// Gets the values of all binary channels
message GetAll {
    // put here your fields
    // default: no parameters
}

// FunctionControlGet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlGet hook
message FunctionControlGet {
    oneof type {
        GetSingle single = 1;
        GetAll all = 2;
    }
}

// FunctionControlSet to pass to Functionblock.FunctionControl.functionSpecificFunctionControlSet hook
message FunctionControlSet {
    oneof type {
        SetSingle single = 1;
        SetAll all = 2;
    }
}

message SetAllResponse {
    // put here your fields
    // default: no parameters
}

message SetSingleResponse {
   // put here your fields
    // default: no parameters
}

message GetAllResponse {
    // put here your fields
}

message GetSingleResponse {
    // put here your fields
}


// FunctionControlResponse to pass to Functionblock.FunctionControlResponse.functionSpecificFunctionControlResponse hook
message FunctionControlResponse {
    oneof type {
        GetSingleResponse getSingle = 1;
        GetAllResponse getAll = 2;
        SetSingleResponse setSingle = 3;
        SetAllResponse setAll = 4;
    }
}

// ============= StreamControl ==================
// StreamControlStart to pass to Functionblock.StreamControl.functionSpecificStreamControlStart hook
message StreamControlStart {
    // put here your fields
}

message Sample {
    // put here your fields
}

// StreamData to pass to Functionblock.StreamData.functionSpecificStreamData hook
message StreamData {
    repeated Sample samples = 1;
}
