//
//Copyright Â© 2021 Ci4Rail GmbH <engineering@ci4rail.com>
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: functionblock.proto

package v1alpha1

import (
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------- Responses ------------
type Status int32

const (
	Status_OK    Status = 0
	Status_ERROR Status = 1
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_functionblock_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_functionblock_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{0}
}

// -------- Meta ------------
type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A message identifying key for a command-response pairs, e.g. an UUID the
	// clients sends on the request.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{0}
}

func (x *Context) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// ------- Commands ---------
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// Types that are assignable to Type:
	//	*Command_ConfigurationControl
	//	*Command_FunctionControl
	//	*Command_StreamControl
	Type isCommand_Type `protobuf_oneof:"type"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{1}
}

func (x *Command) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (m *Command) GetType() isCommand_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Command) GetConfigurationControl() *ConfigurationControl {
	if x, ok := x.GetType().(*Command_ConfigurationControl); ok {
		return x.ConfigurationControl
	}
	return nil
}

func (x *Command) GetFunctionControl() *FunctionControl {
	if x, ok := x.GetType().(*Command_FunctionControl); ok {
		return x.FunctionControl
	}
	return nil
}

func (x *Command) GetStreamControl() *StreamControl {
	if x, ok := x.GetType().(*Command_StreamControl); ok {
		return x.StreamControl
	}
	return nil
}

type isCommand_Type interface {
	isCommand_Type()
}

type Command_ConfigurationControl struct {
	ConfigurationControl *ConfigurationControl `protobuf:"bytes,2,opt,name=configurationControl,proto3,oneof"`
}

type Command_FunctionControl struct {
	FunctionControl *FunctionControl `protobuf:"bytes,3,opt,name=functionControl,proto3,oneof"`
}

type Command_StreamControl struct {
	StreamControl *StreamControl `protobuf:"bytes,4,opt,name=streamControl,proto3,oneof"`
}

func (*Command_ConfigurationControl) isCommand_Type() {}

func (*Command_FunctionControl) isCommand_Type() {}

func (*Command_StreamControl) isCommand_Type() {}

// ConfigurationControl contains the function blocks high level configuration
type ConfigurationControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*ConfigurationControl_FunctionSpecificConfigurationControlSet
	//	*ConfigurationControl_FunctionSpecificConfigurationControlGet
	//	*ConfigurationControl_FunctionSpecificConfigurationControlDescribe
	Action isConfigurationControl_Action `protobuf_oneof:"action"`
}

func (x *ConfigurationControl) Reset() {
	*x = ConfigurationControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationControl) ProtoMessage() {}

func (x *ConfigurationControl) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationControl.ProtoReflect.Descriptor instead.
func (*ConfigurationControl) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{2}
}

func (m *ConfigurationControl) GetAction() isConfigurationControl_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *ConfigurationControl) GetFunctionSpecificConfigurationControlSet() *any.Any {
	if x, ok := x.GetAction().(*ConfigurationControl_FunctionSpecificConfigurationControlSet); ok {
		return x.FunctionSpecificConfigurationControlSet
	}
	return nil
}

func (x *ConfigurationControl) GetFunctionSpecificConfigurationControlGet() *any.Any {
	if x, ok := x.GetAction().(*ConfigurationControl_FunctionSpecificConfigurationControlGet); ok {
		return x.FunctionSpecificConfigurationControlGet
	}
	return nil
}

func (x *ConfigurationControl) GetFunctionSpecificConfigurationControlDescribe() *any.Any {
	if x, ok := x.GetAction().(*ConfigurationControl_FunctionSpecificConfigurationControlDescribe); ok {
		return x.FunctionSpecificConfigurationControlDescribe
	}
	return nil
}

type isConfigurationControl_Action interface {
	isConfigurationControl_Action()
}

type ConfigurationControl_FunctionSpecificConfigurationControlSet struct {
	// Setting a new configuration
	FunctionSpecificConfigurationControlSet *any.Any `protobuf:"bytes,10,opt,name=functionSpecificConfigurationControlSet,proto3,oneof"`
}

type ConfigurationControl_FunctionSpecificConfigurationControlGet struct {
	// Getting the current configuration
	FunctionSpecificConfigurationControlGet *any.Any `protobuf:"bytes,20,opt,name=functionSpecificConfigurationControlGet,proto3,oneof"`
}

type ConfigurationControl_FunctionSpecificConfigurationControlDescribe struct {
	// Describe hardware capabilities
	FunctionSpecificConfigurationControlDescribe *any.Any `protobuf:"bytes,30,opt,name=functionSpecificConfigurationControlDescribe,proto3,oneof"`
}

func (*ConfigurationControl_FunctionSpecificConfigurationControlSet) isConfigurationControl_Action() {
}

func (*ConfigurationControl_FunctionSpecificConfigurationControlGet) isConfigurationControl_Action() {
}

func (*ConfigurationControl_FunctionSpecificConfigurationControlDescribe) isConfigurationControl_Action() {
}

// FunctionControl specifies the direct function control for getting and setting values
type FunctionControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*FunctionControl_FunctionSpecificFunctionControlSet
	//	*FunctionControl_FunctionSpecificFunctionControlGet
	Action isFunctionControl_Action `protobuf_oneof:"action"`
}

func (x *FunctionControl) Reset() {
	*x = FunctionControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControl) ProtoMessage() {}

func (x *FunctionControl) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControl.ProtoReflect.Descriptor instead.
func (*FunctionControl) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{3}
}

func (m *FunctionControl) GetAction() isFunctionControl_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *FunctionControl) GetFunctionSpecificFunctionControlSet() *any.Any {
	if x, ok := x.GetAction().(*FunctionControl_FunctionSpecificFunctionControlSet); ok {
		return x.FunctionSpecificFunctionControlSet
	}
	return nil
}

func (x *FunctionControl) GetFunctionSpecificFunctionControlGet() *any.Any {
	if x, ok := x.GetAction().(*FunctionControl_FunctionSpecificFunctionControlGet); ok {
		return x.FunctionSpecificFunctionControlGet
	}
	return nil
}

type isFunctionControl_Action interface {
	isFunctionControl_Action()
}

type FunctionControl_FunctionSpecificFunctionControlSet struct {
	FunctionSpecificFunctionControlSet *any.Any `protobuf:"bytes,1,opt,name=functionSpecificFunctionControlSet,proto3,oneof"`
}

type FunctionControl_FunctionSpecificFunctionControlGet struct {
	FunctionSpecificFunctionControlGet *any.Any `protobuf:"bytes,2,opt,name=functionSpecificFunctionControlGet,proto3,oneof"`
}

func (*FunctionControl_FunctionSpecificFunctionControlSet) isFunctionControl_Action() {}

func (*FunctionControl_FunctionSpecificFunctionControlGet) isFunctionControl_Action() {}

// StreamControl specifies if the stream shall be started or stopped
type StreamControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*StreamControl_FunctionSpecificStreamControlStart
	//	*StreamControl_Stop_
	Action isStreamControl_Action `protobuf_oneof:"action"`
}

func (x *StreamControl) Reset() {
	*x = StreamControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControl) ProtoMessage() {}

func (x *StreamControl) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControl.ProtoReflect.Descriptor instead.
func (*StreamControl) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{4}
}

func (m *StreamControl) GetAction() isStreamControl_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *StreamControl) GetFunctionSpecificStreamControlStart() *any.Any {
	if x, ok := x.GetAction().(*StreamControl_FunctionSpecificStreamControlStart); ok {
		return x.FunctionSpecificStreamControlStart
	}
	return nil
}

func (x *StreamControl) GetStop() *StreamControl_Stop {
	if x, ok := x.GetAction().(*StreamControl_Stop_); ok {
		return x.Stop
	}
	return nil
}

type isStreamControl_Action interface {
	isStreamControl_Action()
}

type StreamControl_FunctionSpecificStreamControlStart struct {
	FunctionSpecificStreamControlStart *any.Any `protobuf:"bytes,1,opt,name=functionSpecificStreamControlStart,proto3,oneof"`
}

type StreamControl_Stop_ struct {
	Stop *StreamControl_Stop `protobuf:"bytes,2,opt,name=stop,proto3,oneof"`
}

func (*StreamControl_FunctionSpecificStreamControlStart) isStreamControl_Action() {}

func (*StreamControl_Stop_) isStreamControl_Action() {}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{5}
}

func (x *Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ConfigurationControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                                       Status   `protobuf:"varint,1,opt,name=status,proto3,enum=functionblock.Status" json:"status,omitempty"`
	Error                                        *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	FunctionSpecificConfigurationControlResponse *any.Any `protobuf:"bytes,10,opt,name=functionSpecificConfigurationControlResponse,proto3" json:"functionSpecificConfigurationControlResponse,omitempty"`
}

func (x *ConfigurationControlResponse) Reset() {
	*x = ConfigurationControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationControlResponse) ProtoMessage() {}

func (x *ConfigurationControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationControlResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationControlResponse) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigurationControlResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *ConfigurationControlResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ConfigurationControlResponse) GetFunctionSpecificConfigurationControlResponse() *any.Any {
	if x != nil {
		return x.FunctionSpecificConfigurationControlResponse
	}
	return nil
}

type FunctionControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                                  Status   `protobuf:"varint,1,opt,name=status,proto3,enum=functionblock.Status" json:"status,omitempty"`
	Error                                   *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	FunctionSpecificFunctionControlResponse *any.Any `protobuf:"bytes,10,opt,name=functionSpecificFunctionControlResponse,proto3" json:"functionSpecificFunctionControlResponse,omitempty"`
}

func (x *FunctionControlResponse) Reset() {
	*x = FunctionControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionControlResponse) ProtoMessage() {}

func (x *FunctionControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionControlResponse.ProtoReflect.Descriptor instead.
func (*FunctionControlResponse) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{7}
}

func (x *FunctionControlResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *FunctionControlResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *FunctionControlResponse) GetFunctionSpecificFunctionControlResponse() *any.Any {
	if x != nil {
		return x.FunctionSpecificFunctionControlResponse
	}
	return nil
}

type StreamControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=functionblock.Status" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StreamControlResponse) Reset() {
	*x = StreamControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControlResponse) ProtoMessage() {}

func (x *StreamControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControlResponse.ProtoReflect.Descriptor instead.
func (*StreamControlResponse) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{8}
}

func (x *StreamControlResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *StreamControlResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type StreamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timestamp when the message has been sent out
	DeliveryTimestampUs uint64 `protobuf:"fixed64,1,opt,name=deliveryTimestampUs,proto3" json:"deliveryTimestampUs,omitempty"`
	// sample series sequence number (counted from 0, rolls over)
	Sequence uint32 `protobuf:"fixed32,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Function specific data type
	FunctionSpecificStreamData *any.Any `protobuf:"bytes,10,opt,name=functionSpecificStreamData,proto3" json:"functionSpecificStreamData,omitempty"`
}

func (x *StreamData) Reset() {
	*x = StreamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamData) ProtoMessage() {}

func (x *StreamData) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamData.ProtoReflect.Descriptor instead.
func (*StreamData) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{9}
}

func (x *StreamData) GetDeliveryTimestampUs() uint64 {
	if x != nil {
		return x.DeliveryTimestampUs
	}
	return 0
}

func (x *StreamData) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *StreamData) GetFunctionSpecificStreamData() *any.Any {
	if x != nil {
		return x.FunctionSpecificStreamData
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// Types that are assignable to Type:
	//	*Response_ConfigurationControl
	//	*Response_FunctionControl
	//	*Response_StreamControl
	//	*Response_Stream
	Type isResponse_Type `protobuf_oneof:"type"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{10}
}

func (x *Response) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (m *Response) GetType() isResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Response) GetConfigurationControl() *ConfigurationControlResponse {
	if x, ok := x.GetType().(*Response_ConfigurationControl); ok {
		return x.ConfigurationControl
	}
	return nil
}

func (x *Response) GetFunctionControl() *FunctionControlResponse {
	if x, ok := x.GetType().(*Response_FunctionControl); ok {
		return x.FunctionControl
	}
	return nil
}

func (x *Response) GetStreamControl() *StreamControlResponse {
	if x, ok := x.GetType().(*Response_StreamControl); ok {
		return x.StreamControl
	}
	return nil
}

func (x *Response) GetStream() *StreamData {
	if x, ok := x.GetType().(*Response_Stream); ok {
		return x.Stream
	}
	return nil
}

type isResponse_Type interface {
	isResponse_Type()
}

type Response_ConfigurationControl struct {
	ConfigurationControl *ConfigurationControlResponse `protobuf:"bytes,2,opt,name=configurationControl,proto3,oneof"`
}

type Response_FunctionControl struct {
	FunctionControl *FunctionControlResponse `protobuf:"bytes,3,opt,name=functionControl,proto3,oneof"`
}

type Response_StreamControl struct {
	StreamControl *StreamControlResponse `protobuf:"bytes,4,opt,name=streamControl,proto3,oneof"`
}

type Response_Stream struct {
	Stream *StreamData `protobuf:"bytes,5,opt,name=stream,proto3,oneof"`
}

func (*Response_ConfigurationControl) isResponse_Type() {}

func (*Response_FunctionControl) isResponse_Type() {}

func (*Response_StreamControl) isResponse_Type() {}

func (*Response_Stream) isResponse_Type() {}

type StreamControl_Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamControl_Stop) Reset() {
	*x = StreamControl_Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_functionblock_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamControl_Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControl_Stop) ProtoMessage() {}

func (x *StreamControl_Stop) ProtoReflect() protoreflect.Message {
	mi := &file_functionblock_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControl_Stop.ProtoReflect.Descriptor instead.
func (*StreamControl_Stop) Descriptor() ([]byte, []int) {
	return file_functionblock_proto_rawDescGZIP(), []int{4, 0}
}

var File_functionblock_proto protoreflect.FileDescriptor

var file_functionblock_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1f, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xb0, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x59,
	0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x4a, 0x0a, 0x0f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x44, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x80, 0x03, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x70, 0x0a, 0x27,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x27, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x70,
	0x0a, 0x27, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x27, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74,
	0x12, 0x7a, 0x0a, 0x2c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x2c,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x0f, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x66, 0x0a, 0x22, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x22,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53,
	0x65, 0x74, 0x12, 0x66, 0x0a, 0x22, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x22, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x66, 0x0a, 0x22, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x22, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x37,
	0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x1a, 0x06, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x42,
	0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf3, 0x01, 0x0a, 0x1c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x78, 0x0a, 0x2c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x2c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe4,
	0x01, 0x0a, 0x17, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x6e, 0x0a, 0x27, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x27, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x1a, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x1a, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfe, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x61, 0x0a, 0x14, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x52,
	0x0a, 0x0f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x4c, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x1b, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x18, 0x5a, 0x16, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_functionblock_proto_rawDescOnce sync.Once
	file_functionblock_proto_rawDescData = file_functionblock_proto_rawDesc
)

func file_functionblock_proto_rawDescGZIP() []byte {
	file_functionblock_proto_rawDescOnce.Do(func() {
		file_functionblock_proto_rawDescData = protoimpl.X.CompressGZIP(file_functionblock_proto_rawDescData)
	})
	return file_functionblock_proto_rawDescData
}

var file_functionblock_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_functionblock_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_functionblock_proto_goTypes = []interface{}{
	(Status)(0),                          // 0: functionblock.Status
	(*Context)(nil),                      // 1: functionblock.Context
	(*Command)(nil),                      // 2: functionblock.Command
	(*ConfigurationControl)(nil),         // 3: functionblock.ConfigurationControl
	(*FunctionControl)(nil),              // 4: functionblock.FunctionControl
	(*StreamControl)(nil),                // 5: functionblock.StreamControl
	(*Error)(nil),                        // 6: functionblock.Error
	(*ConfigurationControlResponse)(nil), // 7: functionblock.ConfigurationControlResponse
	(*FunctionControlResponse)(nil),      // 8: functionblock.FunctionControlResponse
	(*StreamControlResponse)(nil),        // 9: functionblock.StreamControlResponse
	(*StreamData)(nil),                   // 10: functionblock.StreamData
	(*Response)(nil),                     // 11: functionblock.Response
	(*StreamControl_Stop)(nil),           // 12: functionblock.StreamControl.Stop
	(*any.Any)(nil),                      // 13: google.protobuf.Any
}
var file_functionblock_proto_depIdxs = []int32{
	1,  // 0: functionblock.Command.context:type_name -> functionblock.Context
	3,  // 1: functionblock.Command.configurationControl:type_name -> functionblock.ConfigurationControl
	4,  // 2: functionblock.Command.functionControl:type_name -> functionblock.FunctionControl
	5,  // 3: functionblock.Command.streamControl:type_name -> functionblock.StreamControl
	13, // 4: functionblock.ConfigurationControl.functionSpecificConfigurationControlSet:type_name -> google.protobuf.Any
	13, // 5: functionblock.ConfigurationControl.functionSpecificConfigurationControlGet:type_name -> google.protobuf.Any
	13, // 6: functionblock.ConfigurationControl.functionSpecificConfigurationControlDescribe:type_name -> google.protobuf.Any
	13, // 7: functionblock.FunctionControl.functionSpecificFunctionControlSet:type_name -> google.protobuf.Any
	13, // 8: functionblock.FunctionControl.functionSpecificFunctionControlGet:type_name -> google.protobuf.Any
	13, // 9: functionblock.StreamControl.functionSpecificStreamControlStart:type_name -> google.protobuf.Any
	12, // 10: functionblock.StreamControl.stop:type_name -> functionblock.StreamControl.Stop
	0,  // 11: functionblock.ConfigurationControlResponse.status:type_name -> functionblock.Status
	6,  // 12: functionblock.ConfigurationControlResponse.error:type_name -> functionblock.Error
	13, // 13: functionblock.ConfigurationControlResponse.functionSpecificConfigurationControlResponse:type_name -> google.protobuf.Any
	0,  // 14: functionblock.FunctionControlResponse.status:type_name -> functionblock.Status
	6,  // 15: functionblock.FunctionControlResponse.error:type_name -> functionblock.Error
	13, // 16: functionblock.FunctionControlResponse.functionSpecificFunctionControlResponse:type_name -> google.protobuf.Any
	0,  // 17: functionblock.StreamControlResponse.status:type_name -> functionblock.Status
	6,  // 18: functionblock.StreamControlResponse.error:type_name -> functionblock.Error
	13, // 19: functionblock.StreamData.functionSpecificStreamData:type_name -> google.protobuf.Any
	1,  // 20: functionblock.Response.context:type_name -> functionblock.Context
	7,  // 21: functionblock.Response.configurationControl:type_name -> functionblock.ConfigurationControlResponse
	8,  // 22: functionblock.Response.functionControl:type_name -> functionblock.FunctionControlResponse
	9,  // 23: functionblock.Response.streamControl:type_name -> functionblock.StreamControlResponse
	10, // 24: functionblock.Response.stream:type_name -> functionblock.StreamData
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_functionblock_proto_init() }
func file_functionblock_proto_init() {
	if File_functionblock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_functionblock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_functionblock_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamControl_Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_functionblock_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Command_ConfigurationControl)(nil),
		(*Command_FunctionControl)(nil),
		(*Command_StreamControl)(nil),
	}
	file_functionblock_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ConfigurationControl_FunctionSpecificConfigurationControlSet)(nil),
		(*ConfigurationControl_FunctionSpecificConfigurationControlGet)(nil),
		(*ConfigurationControl_FunctionSpecificConfigurationControlDescribe)(nil),
	}
	file_functionblock_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*FunctionControl_FunctionSpecificFunctionControlSet)(nil),
		(*FunctionControl_FunctionSpecificFunctionControlGet)(nil),
	}
	file_functionblock_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*StreamControl_FunctionSpecificStreamControlStart)(nil),
		(*StreamControl_Stop_)(nil),
	}
	file_functionblock_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Response_ConfigurationControl)(nil),
		(*Response_FunctionControl)(nil),
		(*Response_StreamControl)(nil),
		(*Response_Stream)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_functionblock_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_functionblock_proto_goTypes,
		DependencyIndexes: file_functionblock_proto_depIdxs,
		EnumInfos:         file_functionblock_proto_enumTypes,
		MessageInfos:      file_functionblock_proto_msgTypes,
	}.Build()
	File_functionblock_proto = out.File
	file_functionblock_proto_rawDesc = nil
	file_functionblock_proto_goTypes = nil
	file_functionblock_proto_depIdxs = nil
}
